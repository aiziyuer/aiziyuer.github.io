<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Tomcat支持双向认证</title>
      <link href="/2025/03/22/web/2015-06-18-Tomcat%E6%94%AF%E6%8C%81%E5%8F%8C%E5%90%91%E8%AE%A4%E8%AF%81/"/>
      <url>/2025/03/22/web/2015-06-18-Tomcat%E6%94%AF%E6%8C%81%E5%8F%8C%E5%90%91%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<p>因为项目中需要加密传输网络，所以考虑让tomcat支持双向认证，客户端需要验证服务器的可信性，服务器端也需要验证客户端的可信性，实现如下：</p><h3 id="1-生成服务器端的密钥，用于加密服务器端的信息："><a href="#1-生成服务器端的密钥，用于加密服务器端的信息：" class="headerlink" title="1.生成服务器端的密钥，用于加密服务器端的信息："></a>1.生成服务器端的密钥，用于加密服务器端的信息：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -keystore tomcat.keystore -dname <span class="string">&quot;CN=Moss, OU=Moss, O=Moss, L=Xi&#x27;an, ST=Shanxi, C=CN&quot;</span> -validity 36500 -storetype jks -keyalg RSA -keysize 4096 -sigalg SHA256withRSA -keypass tomcat -storepass tomcat -<span class="built_in">alias</span> tomcat</span><br></pre></td></tr></table></figure><h3 id="2-生成客户端的个人证书（P12）"><a href="#2-生成客户端的个人证书（P12）" class="headerlink" title="2. 生成客户端的个人证书（P12）:"></a>2. 生成客户端的个人证书（P12）:</h3><p>浏览器连接服务器用的钥匙，服务器只是信任密钥，用户需要在使用前导入P12证书证明自己的身份。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -keystore client.p12 -dname <span class="string">&quot;CN=Moss, OU=Moss, O=Moss, L=Xi&#x27;an, ST=Shanxi, C=CN&quot;</span> -validity 36500 -storetype PKCS12 -keyalg RSA -keysize 4096 -sigalg SHA256withRSA -keypass client -storepass client -<span class="built_in">alias</span> client</span><br></pre></td></tr></table></figure><h3 id="3-导出可信个人可信证书cer文件"><a href="#3-导出可信个人可信证书cer文件" class="headerlink" title="3. 导出可信个人可信证书cer文件"></a>3. 导出可信个人可信证书cer文件</h3><p>因为PKCS12格式的文件无法直接导入密钥，需要从个人信息中提取cer格式证书。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -<span class="built_in">export</span> -file client.cer  -keystore client.p12 -storetype PKCS12 -storepass client -rfc -<span class="built_in">alias</span> client</span><br></pre></td></tr></table></figure><h3 id="4-导入个人可信证书入服务器密钥"><a href="#4-导入个人可信证书入服务器密钥" class="headerlink" title="4. 导入个人可信证书入服务器密钥"></a>4. 导入个人可信证书入服务器密钥</h3><p>将个人可信证书导入服务器密钥，这样客户端就作为可信源自由连接服务器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> y | keytool -import -v -file client.cer -keystore tomcat.keystore -storepass tomcat -<span class="built_in">alias</span> client</span><br></pre></td></tr></table></figure><p>导入后cer文件就没有用了，因为可信证书已经进了服务器的密钥库了，所以进行删除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -f client.cer</span><br></pre></td></tr></table></figure><h3 id="5-查看当前服务器端密钥证书情况"><a href="#5-查看当前服务器端密钥证书情况" class="headerlink" title="5. 查看当前服务器端密钥证书情况"></a>5. 查看当前服务器端密钥证书情况</h3><p>这时如果不出问题，应该是有两个证书存在，一个是服务器本身的密钥，用于加密服务器的对外的服务内容；另一个是客户端的可信证书，用于验证客户端身份；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -list -keystore tomcat.keystore -storepass tomcat</span><br></pre></td></tr></table></figure><p>如果按照上面的操作无误， 那么得到的应该如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">密钥库类型: JKS</span><br><span class="line">密钥库提供方: SUN</span><br><span class="line"></span><br><span class="line">您的密钥库包含 2 个条目</span><br><span class="line"></span><br><span class="line">client, 2015-6-19, trustedCertEntry,</span><br><span class="line">证书指纹 (SHA1): 7D:98:5C:75:17:81:30:67:6E:66:E8:5E:6A:57:75:8E:7C:31:F5:BE</span><br><span class="line">tomcat, 2015-6-19, PrivateKeyEntry,</span><br><span class="line">证书指纹 (SHA1): 7D:0E:84:75:56:8D:F3:F8:7B:B1:26:80:B2:FA:71:89:F0:94:1E:FD</span><br></pre></td></tr></table></figure><h3 id="6-将服务器端导出为可信机构证书"><a href="#6-将服务器端导出为可信机构证书" class="headerlink" title="6. 将服务器端导出为可信机构证书"></a>6. 将服务器端导出为可信机构证书</h3><p>因为我们的服务器进行了加密，所以我们需要导入服务器端的可信证书来进行服务器的访问。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -rfc -file tomcat.cer -keystore tomcat.keystore -<span class="built_in">export</span> -<span class="built_in">alias</span> tomcat -storepass tomcat</span><br></pre></td></tr></table></figure><h3 id="7-总结"><a href="#7-总结" class="headerlink" title="7. 总结"></a>7. 总结</h3><p>因为急用，所以写得有些伧俗，之后有时间喝咖啡的时候再把这段批处理调整一下，到时可以支持指定需要生成什么样的文件（可信机构证书、服务器密钥、个人证书）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;清除历史文件&quot;</span></span><br><span class="line"><span class="built_in">rm</span> *.cer *.keystore *.p12</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;生成服务器端的密钥&quot;</span></span><br><span class="line">keytool -genkey -keystore tomcat.keystore -dname <span class="string">&quot;CN=Moss, OU=Moss, O=Moss, L=Xi&#x27;an, ST=Shanxi, C=CN&quot;</span> -validity 36500 -storetype jks -keyalg RSA -keysize 4096 -sigalg SHA256withRSA -keypass tomcat -storepass tomcat -<span class="built_in">alias</span> tomcat</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;生成客户端的证书&quot;</span></span><br><span class="line">keytool -genkey -keystore client.p12 -dname <span class="string">&quot;CN=Moss, OU=Moss, O=Moss, L=Xi&#x27;an, ST=Shanxi, C=CN&quot;</span> -validity 36500 -storetype PKCS12 -keyalg RSA -keysize 4096 -sigalg SHA256withRSA -keypass client -storepass client -<span class="built_in">alias</span> client</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;导出个人信息为cer格式的证书&quot;</span></span><br><span class="line">keytool -<span class="built_in">export</span> -file client.cer  -keystore client.p12 -storetype PKCS12 -storepass client -rfc -<span class="built_in">alias</span> client</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;导出客户端cer证书到服务端信任里&quot;</span></span><br><span class="line"><span class="built_in">echo</span> y | keytool -import -v -file client.cer -keystore tomcat.keystore -storepass tomcat -<span class="built_in">alias</span> client</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;可信个人证书导入，删除个人可信证书&quot;</span></span><br><span class="line"><span class="built_in">rm</span> -f client.cer</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;打印密钥信息&quot;</span></span><br><span class="line">keytool -list -keystore tomcat.keystore -storepass tomcat</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;导出为客户端的导入机构证书&quot;</span></span><br><span class="line">keytool -rfc -file tomcat.cer -keystore tomcat.keystore -<span class="built_in">export</span> -<span class="built_in">alias</span> tomcat -storepass tomcat</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网页 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> keytool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TimeLine学习手记</title>
      <link href="/2025/03/22/web/2016-07-16-timeline-guide/"/>
      <url>/2025/03/22/web/2016-07-16-timeline-guide/</url>
      
        <content type="html"><![CDATA[<!-- 嵌入 --><iframe src="" marginwidth="0" marginheight="0" scrolling="no"></iframe>]]></content>
      
      
      <categories>
          
          <category> 网页 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sublime-配置</title>
      <link href="/2025/03/22/tools/2015-04-26-sublime%E9%85%8D%E7%BD%AE/"/>
      <url>/2025/03/22/tools/2015-04-26-sublime%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>考虑到在sb2上有些插件已经不在支持了(sidebarenhancements), 所以我还是选择sb3, 但是暂时不选择购买, 还比较小资, 对我来说太贵了, 所以以后的文章都是针对sb3.</p><h2 id="系统的配置"><a href="#系统的配置" class="headerlink" title="系统的配置"></a>系统的配置</h2><h3 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h3><p>一劳永逸的事情, sb所有的包都是放在package里面, 所以选择同步这个文件夹就可以做到多个系统同步:</p><ol><li>打开Sublime Text -&gt; Browse Packages找到包的目录, mac下是<code>~/Library/Application Support/Sublime Text 3</code></li><li>目录下的<code>Packages</code>移动到Dropbox,我的目录<code>~/Dropbox/Sync/Sublime3/Packages</code></li><li>进入support目录,建立软连接<code>ln -s ~/Dropbox/Sync/Sublime3/Packages Packages</code></li><li>选择喜欢的工具进行同步(github&#x2F;dropbox)</li><li>下次需要使用的时候, 只要重复以上几步即可</li></ol><h3 id="各系统Package的目录："><a href="#各系统Package的目录：" class="headerlink" title="各系统Package的目录："></a>各系统Package的目录：</h3><ul><li>OS X:</li></ul><blockquote><p>~&#x2F;Library&#x2F;Application Support&#x2F;Sublime Text 3&#x2F;Packages&#x2F;</p></blockquote><ul><li>Linux:</li></ul><blockquote><p>~&#x2F;.config&#x2F;sublime-text-2&#x2F;Packages&#x2F;</p></blockquote><ul><li>Windows:</li></ul><blockquote><p>%APPDATA%&#x2F;Roaming&#x2F;Sublime Text 3&#x2F;Packages&#x2F;</p></blockquote><h3 id="更换图标"><a href="#更换图标" class="headerlink" title="更换图标"></a>更换图标</h3><ul><li><p>Mac下面直接找到应用<code>CMD+i</code>进入应用信息的查看,然后吧要准备好的图表拖拽到信息中的图标上就可以了</p></li><li><p>Windows下有待补充</p></li></ul><h3 id="编辑器的配置"><a href="#编辑器的配置" class="headerlink" title="编辑器的配置"></a>编辑器的配置</h3><p>因为考虑到我自己有些使用习惯，所以配置如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 让 minimap(就是大纲里面的小框) 里的当前位置更显眼点</span></span><br><span class="line"><span class="attr">&quot;always_show_minimap_viewport&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;draw_minimap_border&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置主题的名称</span></span><br><span class="line"><span class="attr">&quot;theme&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Soda Dark.sublime-theme&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;soda_classic_tabs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;soda_folder_icons&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置颜色主题</span></span><br><span class="line"><span class="attr">&quot;color_scheme&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Packages/Monokai Extended/Monokai Extended.tmTheme&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ST 里我经常找不到光标在哪儿, 这个开启后可以高亮当前行</span></span><br><span class="line"><span class="attr">&quot;highlight_modified_tabs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 启用Vinageouss</span></span><br><span class="line"><span class="attr">&quot;ignored_packages&quot;</span><span class="punctuation">:</span></span><br><span class="line"><span class="punctuation">[</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Finder 里打开文件时, 不会新开窗口了</span></span><br><span class="line"><span class="attr">&quot;open_files_in_new_window&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示文件编码</span></span><br><span class="line"><span class="attr">&quot;show_encoding&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 标题栏上显示完整路径, 有时候不小心开错了文件, 这样能帮你早点发现.</span></span><br><span class="line"><span class="attr">&quot;show_full_path&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;show_line_endings&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// vim使用系统的剪贴板</span></span><br><span class="line"><span class="attr">&quot;vintageous_use_sys_clipboard&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br></pre></td></tr></table></figure><h2 id="各种各样有意思的插件"><a href="#各种各样有意思的插件" class="headerlink" title="各种各样有意思的插件"></a>各种各样有意思的插件</h2><p>因为插件非常丰富,所以这里根据用途、平台、语言等来分类进行总结。</p><h3 id="基本的插件"><a href="#基本的插件" class="headerlink" title="基本的插件"></a>基本的插件</h3><ol><li>Git – 用来替代命令行处理文件，我的博客放在github上，所以有时候写文章写到一半不想写了，用来撤销用</li><li>GitGutter – GitGutter 更好的帮助开发者查看文件之前的改动和差异，提升开发效率</li><li>SideBarEnhancements – 可以是你的sidebar右击多出很多有用的菜单</li><li>AutoFileName – 自动补全文件路径-非常方便</li><li>PlainTasks – 支持todo后缀的文件进行任务状态的跟踪</li></ol><h3 id="jekyll支持"><a href="#jekyll支持" class="headerlink" title="jekyll支持"></a>jekyll支持</h3><p>我的博客都是用Sublime编写的，并且使用的是jekyll排版系统，jekyll真的非常方便，但是它只专注于写文章，高亮和其他还需要其他插件完成</p><ol><li>安装jekyll插件</li><li>Markdown Extended – 使用扩展的Markdown的方式，代码高亮非常好用(&#96;&#96;&#96;&#96;里面可以书写语言就能高亮)</li><li>MonoKai Extended – 颜色主题，配合Markdown Extended进行语法高亮, 支持</li></ol><h3 id="web开发"><a href="#web开发" class="headerlink" title="web开发"></a>web开发</h3><ol><li>编辑器的vi支持，自带的不好用，直接禁用：</li></ol><blockquote><p>“Vintagous” 非常棒的vi插件</p></blockquote><h3 id="代码编辑"><a href="#代码编辑" class="headerlink" title="代码编辑"></a>代码编辑</h3><p>代码编辑过程中有些事情很繁琐，譬如注释，代码补全，匹配括号高亮，自动对齐什么的，以下插件用来解决：</p><ol><li>DocBlockr – 成为你编写代码文档的有效工具。当输入&#x2F;**并且按下Tab键的时候，这个插件会自动解析任何一个函数并且为你准备好合适的模板</li></ol><blockquote><p> “jsdocs_extend_double_slash”: false &#x2F;&#x2F;否则双斜杠了之后，下一行会跟着学习</p></blockquote><ol start="2"><li>CodeIntel – 语法补全</li><li>BracketHighlighter – 高亮匹配的括号</li></ol><h3 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h3><p>这里推荐Soda Theme， 安装简单，功能稳定</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2015 </tag>
            
            <tag> sublime </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim-compile</title>
      <link href="/2025/03/22/tools/2015-10-24-vim-compile/"/>
      <url>/2025/03/22/tools/2015-10-24-vim-compile/</url>
      
        <content type="html"><![CDATA[<h1 id="Mac下编译"><a href="#Mac下编译" class="headerlink" title="Mac下编译"></a>Mac下编译</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">./configure --with-features=huge \</span><br><span class="line">                  --enable-rubyinterp \</span><br><span class="line">                  --enable-pythoninterp \</span><br><span class="line">                  --enable-perlinterp \</span><br><span class="line">                  --enable-cscope \</span><br><span class="line">                  --enable-luainterp \</span><br><span class="line">                  --enable-largefile \</span><br><span class="line">                  --with-luajit \</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>win下让Kafka以Service方式运行</title>
      <link href="/2025/03/22/study/2015-11-15-kafka-work-as-windows-service/"/>
      <url>/2025/03/22/study/2015-11-15-kafka-work-as-windows-service/</url>
      
        <content type="html"><![CDATA[<p>Kafka是依赖于Zookeeper的，也就是说如果要启动kafka, 必须要先启动zookeeper，但是如果每次调试都要进入命令行启动两个黑框框就太蛋疼了，所以可以学习Tomcat来把Java的程序以windows的Service方式来运行，一下是修改Kafka的启动脚本<code>server.cmd</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@echo</span> off</span><br><span class="line">SetLocal</span><br><span class="line"></span><br><span class="line">set KAFKA_LOG4J_OPTS=-Dlog4j.ZKKFCONFIGuration=file:%~dp0..\..\ZKKFCONFIG\log4j.properties</span><br><span class="line">set KAFKA_HEAP_OPTS=-Xmx512M -Xms512M</span><br><span class="line"></span><br><span class="line">set ZKSERVER_NAME=moss-zkServer</span><br><span class="line">set ZKSERVER_EXE=%~dp0%ZKSERVER_NAME%.exe</span><br><span class="line">set ZKKFMAIN_CLASS=org.apache.zookeeper.server.quorum.QuorumPeerMain</span><br><span class="line">set ZKKFCONFIG=<span class="string">&quot;%~dp0..\..\config\zookeeper.properties&quot;</span></span><br><span class="line"></span><br><span class="line">set KFSERVER_NAME=moss-Kafka</span><br><span class="line">set KFSERVER_EXE=%~dp0%KFSERVER_NAME%.exe</span><br><span class="line">set KFMAIN_CLASS=kafka.Kafka</span><br><span class="line">set KFCONFIG=<span class="string">&quot;%~dp0..\..\config\server.properties&quot;</span></span><br><span class="line"></span><br><span class="line">call <span class="string">&quot;%~dp0kafka-run-class-cracked.bat&quot;</span></span><br><span class="line"></span><br><span class="line">REM </span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;%1&quot;</span> == <span class="string">&quot;&quot;</span> <span class="keyword">goto</span> showUsage</span><br><span class="line"><span class="keyword">if</span> %<span class="number">1</span> == install <span class="keyword">goto</span> doInstall</span><br><span class="line"><span class="keyword">if</span> %<span class="number">1</span> == uninstall <span class="keyword">goto</span> doUninstall</span><br><span class="line">echo Unknown parameter <span class="string">&quot;%1&quot;</span></span><br><span class="line"><span class="keyword">goto</span> :showUsage</span><br><span class="line"></span><br><span class="line">:doInstall</span><br><span class="line"><span class="string">&quot;%ZKSERVER_EXE%&quot;</span> <span class="comment">//IS//%ZKSERVER_NAME% --DisplayName=&quot;%ZKSERVER_NAME%&quot; ^</span></span><br><span class="line">  --StdOutput=auto --StdError=auto --LogLevel=Debug --LogPath=<span class="string">&quot;%~dp0logs&quot;</span> ^</span><br><span class="line">    --Startup=auto --StartMode=jvm --Jvm=<span class="string">&quot;%JAVA_HOME%\jre\bin\server\jvm.dll&quot;</span> ^</span><br><span class="line">    --PidFile=<span class="string">&quot;%~dp0%ZKSERVER_NAME%.pid&quot;</span> ^</span><br><span class="line">    --Classpath=<span class="string">&quot;%CLASSPATH%&quot;</span> ^</span><br><span class="line">  --StartClass=<span class="string">&quot;%ZKKFMAIN_CLASS%&quot;</span> ^</span><br><span class="line">    --StartParams=<span class="string">&quot;%ZKKFCONFIG%&quot;</span> ^</span><br><span class="line">    --StartPath=<span class="string">&quot;%~dp0&quot;</span> ^</span><br><span class="line">    --JvmOptions=<span class="string">&quot;%KAFKA_HEAP_OPTS% %KAFKA_JVM_PERFORMANCE_OPTS% %KAFKA_JMX_OPTS% %KAFKA_LOG4J_OPTS%&quot;</span></span><br><span class="line"><span class="string">&quot;%KFSERVER_EXE%&quot;</span> <span class="comment">//IS//%KFSERVER_NAME% --DisplayName=&quot;%KFSERVER_NAME%&quot; ^</span></span><br><span class="line">    --StdOutput=auto --StdError=auto --LogLevel=Debug --LogPath=<span class="string">&quot;%~dp0logs&quot;</span> ^</span><br><span class="line">    --Startup=auto --StartMode=jvm --Jvm=<span class="string">&quot;%JAVA_HOME%\jre\bin\server\jvm.dll&quot;</span> ^</span><br><span class="line">    --PidFile=<span class="string">&quot;%~dp0%KFSERVER_NAME%.pid&quot;</span> ^</span><br><span class="line">    --Classpath=<span class="string">&quot;%CLASSPATH%&quot;</span> ^</span><br><span class="line">    --StartClass=<span class="string">&quot;%KFMAIN_CLASS%&quot;</span> ^</span><br><span class="line">    --StartParams=<span class="string">&quot;%KFCONFIG%&quot;</span> ^</span><br><span class="line">    --StartPath=<span class="string">&quot;%~dp0&quot;</span> ^</span><br><span class="line">    --JvmOptions=<span class="string">&quot;%KAFKA_HEAP_OPTS% %KAFKA_JVM_PERFORMANCE_OPTS% %KAFKA_JMX_OPTS% %KAFKA_LOG4J_OPTS%&quot;</span></span><br><span class="line"><span class="keyword">goto</span> :eof</span><br><span class="line"></span><br><span class="line">:doUninstall</span><br><span class="line"><span class="string">&quot;%ZKSERVER_EXE%&quot;</span> <span class="comment">//DS//%ZKSERVER_NAME%</span></span><br><span class="line"><span class="string">&quot;%KFSERVER_EXE%&quot;</span> <span class="comment">//DS//%KFSERVER_NAME%</span></span><br><span class="line"><span class="keyword">goto</span> :eof</span><br><span class="line"></span><br><span class="line">:showUsage</span><br><span class="line">echo Usage: service.bat install/uninstall</span><br><span class="line"><span class="keyword">goto</span> :eof</span><br><span class="line">EndLocal</span><br></pre></td></tr></table></figure><blockquote><p>注意上面的<code>kafka-run-class-cracked.bat</code>是将<code>kafka-run-class.bat</code>注释了<code>%COMMAND%</code>这一行，只保留该脚本的环境变量操作。</p></blockquote><blockquote><p>注意windows下的脚本需要考虑编码（linux下编辑的直接运行会诡异的错误）</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bat </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven开发web</title>
      <link href="/2025/03/22/study/2015-05-09-maven%E5%BC%80%E5%8F%91web/"/>
      <url>/2025/03/22/study/2015-05-09-maven%E5%BC%80%E5%8F%91web/</url>
      
        <content type="html"><![CDATA[<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>Maven是一个版本控制和编译的工具，所以普通的Eclipse是无法胜任这一工作的，我们需要给Eclipse做两个改动：</p><ol><li>m2e插件安装</li></ol><blockquote><p>我使用的是<code>·Indigo Service Release 2·</code>, 第三方的m2e插件无法正常安装，但是可以使用<code>Install New Software</code>,<br>加载官方的仓库路径<code>http://download.eclipse.org/releases/indigo</code>,<br>然后选择<code>General Purpose Tolls</code> -&gt; <code>m2e - Maven Integration for Eclipse</code></p></blockquote><ol start="2"><li>安装相应的connectors – <code>Maven Integration for WTP</code></li></ol><blockquote><p><code>Preference</code> -&gt; <code>Maven</code> -&gt; <code>Discovery</code> -&gt; <code>Open Catalog</code> -&gt; ‘Maven Integration for WTP’安装相应的<br>ps. 这里的<code>WTP</code>全称是Web Tools Platform - eclipse中开发web应用必备的插件</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> websocket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>区间查找算法</title>
      <link href="/2025/03/22/study/2015-08-09-%E5%8C%BA%E9%97%B4%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/"/>
      <url>/2025/03/22/study/2015-08-09-%E5%8C%BA%E9%97%B4%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>有一个需求，业务里需要判断一个数组的数值变化趋势，所以定义了一套门限，但是现在觉得这个门限太全局了，需要缩小范围，<br>最好一段一段的，趋势的判断也会改变原来的逻辑，每次获取门限的时候都带上数组的索引，因此需要设计一个算法，接受到一个<br>数组索引，可以快速查询出对应的门限区间，进而拿到该门限。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>需要满足以下几个条件：</p><ol><li>区间有可能会重合，需要做区间的去重操作；</li><li>区间的查询速度一定要快，因为原始的数组非常大，每个数组元素都会访问一遍；</li></ol><h2 id="性能考虑"><a href="#性能考虑" class="headerlink" title="性能考虑"></a>性能考虑</h2><p>因为有可能分段会非常多，所以提升速度，选用二叉搜索来提升效率，但是有一点需要注意，二叉查询前必须要确保区间没有重叠，<br>这个可以最后做一下数据的预处理。</p><h2 id="可行性分析"><a href="#可行性分析" class="headerlink" title="可行性分析"></a>可行性分析</h2><p>有序的区间序列有特点：当前区间的起始一定小于前一个区间的结束；因此如果给定一个值想知道在哪个区间，二分是可行的。</p><h2 id="搜索实现"><a href="#搜索实现" class="headerlink" title="搜索实现"></a>搜索实现</h2><p>以下是保证区间没有重复后所实现的搜索方法。因为我的代码还没有用作实际的生产，所以只是定义接口进行测试.</p><h3 id="伪代码"><a href="#伪代码" class="headerlink" title="伪代码"></a>伪代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> value; <span class="comment">// 给定的值</span></span><br><span class="line">IRange wantedRange; <span class="comment">// 结果区间</span></span><br><span class="line">IRange[] range; <span class="comment">// 区间端信息</span></span><br><span class="line"><span class="type">int</span> start=<span class="number">0</span>, end=range.length; <span class="comment">// 区间的默认始末</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 二分查找</span></span><br><span class="line"><span class="keyword">while</span>(start &lt;= end)</span><br><span class="line">&#123;</span><br><span class="line">mid = (start + end) / <span class="number">2</span>; <span class="comment">//折半</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(value &lt;= range[mid].start)</span><br><span class="line">&#123;</span><br><span class="line">  end = mid - <span class="number">1</span>; </span><br><span class="line">  <span class="keyword">continue</span>; <span class="comment">// 修正区间继续</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(value &gt; range[mid].end)</span><br><span class="line">&#123;</span><br><span class="line">  start = mid + <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">continue</span>; <span class="comment">// 修正区间继续</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">wantedRange = range[mid]; <span class="comment">// 找到了</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="类型说明"><a href="#类型说明" class="headerlink" title="类型说明"></a>类型说明</h3><p>因为没有具体类型的设计，所以定义接口(<code>IRagion.java</code>)类型供算法使用:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.moss.arithmetic;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类型： 区域, 左开右闭</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IRagion</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取区间起始</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 区间起始</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">double</span> <span class="title function_">getStart</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取区间结束</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 区间结束</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">double</span> <span class="title function_">getEnd</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修正区间的起始</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start 新的区间起始</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setStart</span><span class="params">(<span class="type">double</span> start)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修正区间结束</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end 新的区间结束</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">setEnd</span><span class="params">(<span class="type">double</span> end)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="抽象成策略"><a href="#抽象成策略" class="headerlink" title="抽象成策略"></a>抽象成策略</h3><p>因为考虑到可能还会有更加完美的算法，所以搜素定义成策略接口(<code>IRagionStrategy.java</code>)，做到与具体实现分离:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.moss.arithmetic;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 区间搜索策略接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IRagionStrategy</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 根据给定的值搜索所在的区间， 如果没有找到， 返回null */</span></span><br><span class="line">    IRagion <span class="title function_">search</span><span class="params">(<span class="type">double</span> value)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><p>目前我能想到的好方法还只是使用二叉来提高搜索效率<code>RagionStrategy.java</code>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.moss.arithmetic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分区查找策略</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RagionStrategy</span> <span class="keyword">implements</span> <span class="title class_">IRagionStrategy</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 保存分段信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;IRagion&gt; ragionList;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前的位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> value;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 入参务必要保证区间不能重合</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ragionList 区间列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">RagionStrategy</span><span class="params">(List&lt;IRagion&gt; ragionList)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.ragionList = ragionList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 搜索距离所在的区间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 输入的位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 位置所处的区间， 如果找不到返回null</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IRagion <span class="title function_">search</span><span class="params">(<span class="type">double</span> value)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> binarySearch(value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 二分查找</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 需要查询的值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 找到的值所在区间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> IRagion <span class="title function_">binarySearch</span><span class="params">(<span class="type">double</span> value)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 默认找不到区间</span></span><br><span class="line">        <span class="type">IRagion</span> <span class="variable">ret</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化区间的始末</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">end</span> <span class="operator">=</span> ragionList.size() - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只要区间合法， 就会一直搜索</span></span><br><span class="line">        <span class="keyword">while</span> (start &lt;= end) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 取出中点计算</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (start + end) / <span class="number">2</span>;</span><br><span class="line">            <span class="type">IRagion</span> <span class="variable">ragion</span> <span class="operator">=</span> ragionList.get(mid);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果要找的值比区间起始还要小，则只有区间左边的才有可能是</span></span><br><span class="line">            <span class="keyword">if</span> (Double.compare(value, ragion.getStart()) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                end = mid - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果要找的值比区间的结束还要大，则只有区间右边的才有可能是</span></span><br><span class="line">            <span class="keyword">if</span> (value &gt; ragion.getEnd()) &#123;</span><br><span class="line">                start = mid + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果改值落在区间内(start, end],则说明找到了</span></span><br><span class="line">            ret = ragion;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="处理区间，去除重叠部分"><a href="#处理区间，去除重叠部分" class="headerlink" title="处理区间，去除重叠部分"></a>处理区间，去除重叠部分</h2><p>假定我们的规则是，区间重叠部分认为是无效的部分，那么处理区间的逻辑简化为修正区间的起始和结束。</p><h3 id="伪代码-1"><a href="#伪代码-1" class="headerlink" title="伪代码"></a>伪代码</h3><ol><li>按照区间的起始位置排序, 这样区间至少起始是有序的；</li><li>如果区间存在重叠，那么一定是当前区间的结束位置要后于下一个区间的起始，则去除重复后,<br>当前区间的结束就是下个区间的开始，下个区间的开始就是当前区间的结束，相当于交换前后当前区间的结束和下一个区间的开始</li></ol><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><p>因为是数据的特殊预处理，所以用一个简单的适配器<code>RagionAdapter.java</code>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.moss.arithmetic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 区间适配器，在进入算法前，对数据进行预处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RagionAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 区间比较，按照区间的起始位置比较</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">RagionComparator</span> <span class="keyword">implements</span> <span class="title class_">Comparator</span>&lt;IRagion&gt; &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(IRagion o1, IRagion o2)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Double.compare(o1.getStart(), o2.getStart());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理区间为后面的算法做准备，去除区间的重合部分</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ragionList 原始的区间列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleRagion</span><span class="params">(List&lt;IRagion&gt; ragionList)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ragionList == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 先排序区间</span></span><br><span class="line">        Collections.sort(ragionList, <span class="keyword">new</span> <span class="title class_">RagionComparator</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, end = ragionList.size() - <span class="number">1</span>; i &lt; end; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="type">IRagion</span> <span class="variable">currentRagion</span> <span class="operator">=</span> ragionList.get(i);</span><br><span class="line">            <span class="type">IRagion</span> <span class="variable">nextRagion</span> <span class="operator">=</span> ragionList.get(i + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">double</span> <span class="variable">currentEnd</span> <span class="operator">=</span> currentRagion.getEnd();</span><br><span class="line">            <span class="type">double</span> <span class="variable">nextStart</span> <span class="operator">=</span> nextRagion.getStart();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果发现区间重合，直接去掉重合部分</span></span><br><span class="line">            <span class="keyword">if</span> (nextStart &gt; currentEnd) &#123;</span><br><span class="line">                currentRagion.setEnd(nextStart);</span><br><span class="line">                nextRagion.setStart(currentEnd);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法，java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Add Two Numbers</title>
      <link href="/2025/03/22/study/2015-03-30-leetCode-TwoNumbers%20/"/>
      <url>/2025/03/22/study/2015-03-30-leetCode-TwoNumbers%20/</url>
      
        <content type="html"><![CDATA[<blockquote><p>You are given two linked lists representing two non-negative numbers. The digits are stored in reverse &gt; order and each of their nodes contain a single digit. Add the two numbers and return it as a linked &gt; &gt; list.</p><p>Input: (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)<br>Output: 7 -&gt; 0 -&gt; 8</p></blockquote><h2 id="My-Attempt-Solution1"><a href="#My-Attempt-Solution1" class="headerlink" title="My Attempt Solution1:"></a>My Attempt Solution1:</h2><p>拿到题目, 开始写了才发现对题目理解不到位, 暂时如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">ListNode</span>(<span class="params">val</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">val</span> = val;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">next</span> = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">ListNode</span>&#125; <span class="variable">l1</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">ListNode</span>&#125; <span class="variable">l2</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">ListNode</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> addTwoNumbers = <span class="keyword">function</span> (<span class="params">l1, l2</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 原地逆序</span></span><br><span class="line">    <span class="keyword">var</span> swap = <span class="keyword">function</span> (<span class="params">l</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span> (l != <span class="literal">null</span> &amp;&amp; l.<span class="property">next</span> != <span class="literal">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 交换顺序</span></span><br><span class="line">            <span class="keyword">var</span> tmpVar = l.<span class="property">val</span>;</span><br><span class="line">            l.<span class="property">val</span> = l.<span class="property">next</span>.<span class="property">val</span>;</span><br><span class="line">            l.<span class="property">next</span>.<span class="property">val</span> = tmpVar;</span><br><span class="line"></span><br><span class="line">            l = l.<span class="property">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">swap</span>(l1);</span><br><span class="line">    <span class="title function_">swap</span>(l2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> l2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> input1 = <span class="string">&#x27;2 -&gt; 4 -&gt; 3&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> input2 = <span class="string">&#x27;5 -&gt;6 -&gt; 4&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> inputStr1 = input1.<span class="title function_">split</span>(<span class="regexp">/[^\d]+/</span>);</span><br><span class="line"><span class="keyword">var</span> inputStr2 = input2.<span class="title function_">split</span>(<span class="regexp">/[^\d]+/</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> tmpL, l1, l2;</span><br><span class="line">tmpL = l1 = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="built_in">parseInt</span>(inputStr1[<span class="number">0</span>]));</span><br><span class="line"><span class="keyword">if</span> (inputStr1.<span class="property">length</span> &gt; <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; inputStr1.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        tmpL.<span class="property">next</span> = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="built_in">parseInt</span>(inputStr1[i]));</span><br><span class="line">        tmpL = tmpL.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tmpL = l2 = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="built_in">parseInt</span>(inputStr2[<span class="number">0</span>]))</span><br><span class="line"><span class="keyword">if</span> (inputStr2.<span class="property">length</span> &gt; <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; inputStr2.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        tmpL.<span class="property">next</span> = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="built_in">parseInt</span>(inputStr2[i]));</span><br><span class="line">        tmpL = tmpL.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> l3 = <span class="title function_">addTwoNumbers</span>(l1, l2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ret = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">if</span> (l3 != <span class="literal">null</span>) &#123;</span><br><span class="line">    ret += l3.<span class="property">val</span>;</span><br><span class="line"></span><br><span class="line">    tmpL = l3.<span class="property">next</span>;</span><br><span class="line">    <span class="keyword">while</span> (tmpL != <span class="literal">null</span>) &#123;</span><br><span class="line">        ret += <span class="string">&#x27; -&gt; &#x27;</span> + tmpL.<span class="property">val</span>;</span><br><span class="line">        tmpL = tmpL.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ret);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;finished&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="AC-Solution"><a href="#AC-Solution" class="headerlink" title="AC Solution:"></a>AC Solution:</h2><p>这个题目题意有点混乱, <code>stored in reverse order</code>说是给定的input是逆序的,最坏的是前几个测试用例还很难猜出题意.本题的意思是给定两个非负数的链表,并且每个节点的数字都是一位数字,完成两个’链表’的相加(需要考虑进位的问题).我的做法是将链表形式的数据转换成实际意义的数字,然后再转换回去,还没有尝试其他的方式;</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">ListNode</span>(<span class="params">val</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">val</span> = val;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">next</span> = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">ListNode</span>&#125; <span class="variable">l1</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">ListNode</span>&#125; <span class="variable">l2</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">ListNode</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> addTwoNumbers = <span class="keyword">function</span> (<span class="params">l1, l2</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> node2value = <span class="keyword">function</span> (<span class="params">node</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (node === <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">arguments</span>.<span class="title function_">callee</span>(node.<span class="property">next</span>) * <span class="number">10</span> + node.<span class="property">val</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> value2node = <span class="keyword">function</span> (<span class="params">value</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> l = <span class="keyword">new</span> <span class="title class_">ListNode</span>(value % <span class="number">10</span>);</span><br><span class="line">        value = <span class="title class_">Math</span>.<span class="title function_">floor</span>(value / <span class="number">10</span>);</span><br><span class="line">        <span class="keyword">var</span> tmp = l;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (value !== <span class="number">0</span>) &#123;</span><br><span class="line">            tmp.<span class="property">next</span> = <span class="keyword">new</span> <span class="title class_">ListNode</span>(value % <span class="number">10</span>);</span><br><span class="line">            value = <span class="title class_">Math</span>.<span class="title function_">floor</span>(value / <span class="number">10</span>);</span><br><span class="line">            tmp = tmp.<span class="property">next</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> num1 = <span class="title function_">node2value</span>(l1);</span><br><span class="line">    <span class="keyword">var</span> num2 = <span class="title function_">node2value</span>(l2);</span><br><span class="line">    <span class="keyword">var</span> num3 = num1 + num2;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> ret = <span class="title function_">value2node</span>(num3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createNodes</span>(<span class="params">array</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> ret = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (array != <span class="literal">null</span> &amp;&amp; array.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> tmpL = ret = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="built_in">parseInt</span>(array[<span class="number">0</span>]));</span><br><span class="line">        <span class="keyword">if</span> (array.<span class="property">length</span> &gt; <span class="number">1</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; array.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                tmpL.<span class="property">next</span> = <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="built_in">parseInt</span>(array[i]));</span><br><span class="line">                tmpL = tmpL.<span class="property">next</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> input1 = <span class="string">&#x27;2 -&gt; 4 -&gt; 3&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> input2 = <span class="string">&#x27;5 -&gt; 6 -&gt; 4&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> inputStr1 = input1.<span class="title function_">split</span>(<span class="regexp">/[^\d]+/</span>);</span><br><span class="line"><span class="keyword">var</span> inputStr2 = input2.<span class="title function_">split</span>(<span class="regexp">/[^\d]+/</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> l1 = <span class="title function_">createNodes</span>(inputStr1);</span><br><span class="line"><span class="keyword">var</span> l2 = <span class="title function_">createNodes</span>(inputStr2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> l3 = <span class="title function_">addTwoNumbers</span>(l1, l2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ret = <span class="string">&#x27;&#x27;</span>, tmpL;</span><br><span class="line"><span class="keyword">if</span> (l3 != <span class="literal">null</span>) &#123;</span><br><span class="line">    ret += l3.<span class="property">val</span>;</span><br><span class="line"></span><br><span class="line">    tmpL = l3.<span class="property">next</span>;</span><br><span class="line">    <span class="keyword">while</span> (tmpL != <span class="literal">null</span>) &#123;</span><br><span class="line">        ret += <span class="string">&#x27; -&gt; &#x27;</span> + tmpL.<span class="property">val</span>;</span><br><span class="line">        tmpL = tmpL.<span class="property">next</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ret);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;finished&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Two Sum</title>
      <link href="/2025/03/22/study/2015-03-30-leetCode-TwoSum/"/>
      <url>/2025/03/22/study/2015-03-30-leetCode-TwoSum/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Given an array of integers, find two numbers such that they add up to a specific target number.</p><p>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (both index1 and index2) are not zero-based.</p><p>You may assume that each input would have exactly one solution.</p><p>Input: numbers&#x3D;{2, 7, 11, 15}, target&#x3D;9<br>Output: index1&#x3D;1, index2&#x3D;2</p></blockquote><h2 id="My-Attempt-Solution1"><a href="#My-Attempt-Solution1" class="headerlink" title="My Attempt Solution1:"></a>My Attempt Solution1:</h2><p>拿到题目, 我以为很简单, 所以在手机上直接敲代码, 第一次的程序如下, 结果<code>Time Limit Exceeded</code>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> twoSum = <span class="keyword">function</span> (<span class="params">numbers, target</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">0</span>, j = i + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> temp = numbers[i] + numbers[j]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (temp &lt; target) &#123;</span><br><span class="line">            j = j + <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (temp &gt; target) &#123;</span><br><span class="line">            i = i + <span class="number">1</span></span><br><span class="line">            j = i + <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [i + <span class="number">1</span>, j + <span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> target = <span class="number">16021</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">twoSum</span>(numbers, target));</span><br></pre></td></tr></table></figure><p>接下来需要深入理解题意, 感觉连答案都错了.</p><h2 id="My-Attempt-Solution2"><a href="#My-Attempt-Solution2" class="headerlink" title="My Attempt Solution2:"></a>My Attempt Solution2:</h2><p>为了提高速度, 在进入逻辑前进行数组的排序, 结果<code> Wrong Answer</code>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> twoSum = <span class="keyword">function</span> (<span class="params">numbers, target</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">0</span>, j = i + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    numbers.<span class="title function_">sort</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> temp = numbers[i] + numbers[j];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (temp &lt; target) &#123;</span><br><span class="line">            j = j + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (temp &gt; target) &#123;</span><br><span class="line">            i = i + <span class="number">1</span>;</span><br><span class="line">            j = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [i + <span class="number">1</span>, j + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> numbers = [<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>]</span><br><span class="line"><span class="keyword">var</span> target = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> start = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line"><span class="keyword">var</span> result = <span class="title function_">twoSum</span>(numbers, target);</span><br><span class="line"><span class="keyword">var</span> cost = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>() - start;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(cost);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure><h2 id="My-Final-Solution"><a href="#My-Final-Solution" class="headerlink" title="My Final Solution:"></a>My Final Solution:</h2><p>中间还错了好几次, 还要考虑数据是负数的情况:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> twoSum = <span class="keyword">function</span> (<span class="params">numbers, target</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">0</span>, j = numbers.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> newNumbers = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> k = <span class="number">0</span>; k &lt; numbers.<span class="property">length</span>; k++) &#123;</span><br><span class="line">        newNumbers.<span class="title function_">push</span>([numbers[k], k]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    newNumbers.<span class="title function_">sort</span>(<span class="keyword">function</span> (<span class="params">a, b</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> a[<span class="number">0</span>] - b[<span class="number">0</span>];</span><br><span class="line">            &#125;</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> temp = newNumbers[i][<span class="number">0</span>] + newNumbers[j][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (temp &lt; target) &#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (temp &gt; target) &#123;</span><br><span class="line">            j--;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [newNumbers[i][<span class="number">1</span>] + <span class="number">1</span>, newNumbers[j][<span class="number">1</span>] + <span class="number">1</span>].<span class="title function_">sort</span>(<span class="keyword">function</span> (<span class="params">a, b</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> a - b;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> numbers = [<span class="number">572</span>, <span class="number">815</span>, <span class="number">387</span>, <span class="number">418</span>, <span class="number">434</span>, <span class="number">530</span>, <span class="number">376</span>, <span class="number">190</span>, <span class="number">196</span>, <span class="number">74</span>, <span class="number">830</span>, <span class="number">561</span>, <span class="number">973</span>, <span class="number">771</span>, <span class="number">640</span>, <span class="number">37</span>, <span class="number">539</span>, <span class="number">369</span>, <span class="number">327</span>, <span class="number">51</span>, <span class="number">623</span>, <span class="number">575</span>, <span class="number">988</span>, <span class="number">44</span>, <span class="number">659</span>, <span class="number">48</span>, <span class="number">22</span>, <span class="number">776</span>, <span class="number">487</span>, <span class="number">873</span>, <span class="number">486</span>, <span class="number">169</span>, <span class="number">499</span>, <span class="number">82</span>, <span class="number">128</span>, <span class="number">31</span>, <span class="number">386</span>, <span class="number">691</span>, <span class="number">553</span>, <span class="number">848</span>, <span class="number">968</span>, <span class="number">874</span>, <span class="number">692</span>, <span class="number">404</span>, <span class="number">463</span>, <span class="number">285</span>, <span class="number">745</span>, <span class="number">631</span>, <span class="number">304</span>, <span class="number">271</span>, <span class="number">40</span>, <span class="number">921</span>, <span class="number">733</span>, <span class="number">56</span>, <span class="number">883</span>, <span class="number">517</span>, <span class="number">99</span>, <span class="number">580</span>, <span class="number">55</span>, <span class="number">81</span>, <span class="number">232</span>, <span class="number">971</span>, <span class="number">561</span>, <span class="number">683</span>, <span class="number">806</span>, <span class="number">994</span>, <span class="number">823</span>, <span class="number">219</span>, <span class="number">315</span>, <span class="number">564</span>, <span class="number">997</span>, <span class="number">976</span>, <span class="number">158</span>, <span class="number">208</span>, <span class="number">851</span>, <span class="number">206</span>, <span class="number">101</span>, <span class="number">989</span>, <span class="number">542</span>, <span class="number">985</span>, <span class="number">940</span>, <span class="number">116</span>, <span class="number">153</span>, <span class="number">47</span>, <span class="number">806</span>, <span class="number">944</span>, <span class="number">337</span>, <span class="number">903</span>, <span class="number">712</span>, <span class="number">138</span>, <span class="number">236</span>, <span class="number">777</span>, <span class="number">630</span>, <span class="number">912</span>, <span class="number">22</span>, <span class="number">140</span>, <span class="number">525</span>, <span class="number">270</span>, <span class="number">997</span>, <span class="number">763</span>, <span class="number">812</span>, <span class="number">597</span>, <span class="number">806</span>, <span class="number">423</span>, <span class="number">869</span>, <span class="number">926</span>, <span class="number">344</span>, <span class="number">494</span>, <span class="number">858</span>, <span class="number">519</span>, <span class="number">389</span>, <span class="number">627</span>, <span class="number">517</span>, <span class="number">964</span>, <span class="number">74</span>, <span class="number">432</span>, <span class="number">730</span>, <span class="number">843</span>, <span class="number">673</span>, <span class="number">985</span>, <span class="number">819</span>, <span class="number">397</span>, <span class="number">607</span>, <span class="number">34</span>, <span class="number">948</span>, <span class="number">648</span>, <span class="number">43</span>, <span class="number">212</span>, <span class="number">950</span>, <span class="number">235</span>, <span class="number">995</span>, <span class="number">76</span>, <span class="number">439</span>, <span class="number">614</span>, <span class="number">203</span>, <span class="number">313</span>, <span class="number">180</span>, <span class="number">760</span>, <span class="number">210</span>, <span class="number">813</span>, <span class="number">920</span>, <span class="number">229</span>, <span class="number">615</span>, <span class="number">730</span>, <span class="number">359</span>, <span class="number">863</span>, <span class="number">678</span>, <span class="number">43</span>, <span class="number">293</span>, <span class="number">978</span>, <span class="number">305</span>, <span class="number">106</span>, <span class="number">797</span>, <span class="number">769</span>, <span class="number">3</span>, <span class="number">700</span>, <span class="number">945</span>, <span class="number">135</span>, <span class="number">430</span>, <span class="number">965</span>, <span class="number">762</span>, <span class="number">479</span>, <span class="number">152</span>, <span class="number">121</span>, <span class="number">935</span>, <span class="number">809</span>, <span class="number">101</span>, <span class="number">271</span>, <span class="number">428</span>, <span class="number">608</span>, <span class="number">8</span>, <span class="number">983</span>, <span class="number">758</span>, <span class="number">662</span>, <span class="number">755</span>, <span class="number">190</span>, <span class="number">632</span>, <span class="number">792</span>, <span class="number">789</span>, <span class="number">174</span>, <span class="number">869</span>, <span class="number">622</span>, <span class="number">885</span>, <span class="number">626</span>, <span class="number">310</span>, <span class="number">128</span>, <span class="number">233</span>, <span class="number">82</span>, <span class="number">223</span>, <span class="number">339</span>, <span class="number">771</span>, <span class="number">741</span>, <span class="number">227</span>, <span class="number">131</span>, <span class="number">85</span>, <span class="number">51</span>, <span class="number">361</span>, <span class="number">343</span>, <span class="number">641</span>, <span class="number">568</span>, <span class="number">922</span>, <span class="number">145</span>, <span class="number">256</span>, <span class="number">177</span>, <span class="number">329</span>, <span class="number">959</span>, <span class="number">991</span>, <span class="number">293</span>, <span class="number">850</span>, <span class="number">858</span>, <span class="number">76</span>, <span class="number">291</span>, <span class="number">134</span>, <span class="number">254</span>, <span class="number">956</span>, <span class="number">971</span>, <span class="number">718</span>, <span class="number">391</span>, <span class="number">336</span>, <span class="number">899</span>, <span class="number">206</span>, <span class="number">642</span>, <span class="number">254</span>, <span class="number">851</span>, <span class="number">274</span>, <span class="number">239</span>, <span class="number">538</span>, <span class="number">418</span>, <span class="number">21</span>, <span class="number">232</span>, <span class="number">706</span>, <span class="number">275</span>, <span class="number">615</span>, <span class="number">568</span>, <span class="number">714</span>, <span class="number">234</span>, <span class="number">567</span>, <span class="number">994</span>, <span class="number">368</span>, <span class="number">54</span>, <span class="number">744</span>, <span class="number">498</span>, <span class="number">380</span>, <span class="number">594</span>, <span class="number">415</span>, <span class="number">286</span>, <span class="number">260</span>, <span class="number">582</span>, <span class="number">522</span>, <span class="number">795</span>, <span class="number">261</span>, <span class="number">437</span>, <span class="number">292</span>, <span class="number">887</span>, <span class="number">405</span>, <span class="number">293</span>, <span class="number">946</span>, <span class="number">678</span>, <span class="number">686</span>, <span class="number">682</span>, <span class="number">501</span>, <span class="number">238</span>, <span class="number">245</span>, <span class="number">380</span>, <span class="number">218</span>, <span class="number">591</span>, <span class="number">722</span>, <span class="number">519</span>, <span class="number">770</span>, <span class="number">359</span>, <span class="number">340</span>, <span class="number">215</span>, <span class="number">151</span>, <span class="number">368</span>, <span class="number">356</span>, <span class="number">795</span>, <span class="number">91</span>, <span class="number">250</span>, <span class="number">413</span>, <span class="number">970</span>, <span class="number">37</span>, <span class="number">941</span>, <span class="number">356</span>, <span class="number">648</span>, <span class="number">594</span>, <span class="number">513</span>, <span class="number">484</span>, <span class="number">364</span>, <span class="number">484</span>, <span class="number">909</span>, <span class="number">292</span>, <span class="number">501</span>, <span class="number">59</span>, <span class="number">982</span>, <span class="number">686</span>, <span class="number">827</span>, <span class="number">461</span>, <span class="number">60</span>, <span class="number">557</span>, <span class="number">178</span>, <span class="number">952</span>, <span class="number">218</span>, <span class="number">634</span>, <span class="number">785</span>, <span class="number">251</span>, <span class="number">290</span>, <span class="number">156</span>, <span class="number">300</span>, <span class="number">711</span>, <span class="number">322</span>, <span class="number">570</span>, <span class="number">820</span>, <span class="number">191</span>, <span class="number">755</span>, <span class="number">429</span>, <span class="number">950</span>, <span class="number">18</span>, <span class="number">917</span>, <span class="number">905</span>, <span class="number">905</span>, <span class="number">126</span>, <span class="number">790</span>, <span class="number">638</span>, <span class="number">94</span>, <span class="number">857</span>, <span class="number">235</span>, <span class="number">889</span>, <span class="number">611</span>, <span class="number">605</span>, <span class="number">203</span>, <span class="number">859</span>, <span class="number">749</span>, <span class="number">874</span>, <span class="number">530</span>, <span class="number">727</span>, <span class="number">764</span>, <span class="number">197</span>, <span class="number">537</span>, <span class="number">951</span>, <span class="number">919</span>, <span class="number">24</span>, <span class="number">341</span>, <span class="number">334</span>, <span class="number">505</span>, <span class="number">796</span>, <span class="number">619</span>, <span class="number">492</span>, <span class="number">295</span>, <span class="number">380</span>, <span class="number">128</span>, <span class="number">533</span>, <span class="number">600</span>, <span class="number">160</span>, <span class="number">51</span>, <span class="number">249</span>, <span class="number">5</span>, <span class="number">837</span>, <span class="number">905</span>, <span class="number">747</span>, <span class="number">505</span>, <span class="number">82</span>, <span class="number">158</span>, <span class="number">687</span>, <span class="number">507</span>, <span class="number">339</span>, <span class="number">575</span>, <span class="number">206</span>, <span class="number">28</span>, <span class="number">29</span>, <span class="number">91</span>, <span class="number">459</span>, <span class="number">118</span>, <span class="number">284</span>, <span class="number">995</span>, <span class="number">544</span>, <span class="number">3</span>, <span class="number">154</span>, <span class="number">89</span>, <span class="number">840</span>, <span class="number">364</span>, <span class="number">682</span>, <span class="number">700</span>, <span class="number">143</span>, <span class="number">173</span>, <span class="number">216</span>, <span class="number">290</span>, <span class="number">733</span>, <span class="number">525</span>, <span class="number">399</span>, <span class="number">574</span>, <span class="number">693</span>, <span class="number">500</span>, <span class="number">189</span>, <span class="number">590</span>, <span class="number">529</span>, <span class="number">972</span>, <span class="number">378</span>, <span class="number">299</span>, <span class="number">461</span>, <span class="number">866</span>, <span class="number">326</span>, <span class="number">43</span>, <span class="number">711</span>, <span class="number">460</span>, <span class="number">426</span>, <span class="number">947</span>, <span class="number">391</span>, <span class="number">536</span>, <span class="number">26</span>, <span class="number">579</span>, <span class="number">304</span>, <span class="number">852</span>, <span class="number">158</span>, <span class="number">621</span>, <span class="number">683</span>, <span class="number">901</span>, <span class="number">237</span>, <span class="number">22</span>, <span class="number">225</span>, <span class="number">59</span>, <span class="number">52</span>, <span class="number">798</span>, <span class="number">262</span>, <span class="number">754</span>, <span class="number">649</span>, <span class="number">504</span>, <span class="number">861</span>, <span class="number">472</span>, <span class="number">480</span>, <span class="number">570</span>, <span class="number">347</span>, <span class="number">891</span>, <span class="number">956</span>, <span class="number">347</span>, <span class="number">31</span>, <span class="number">784</span>, <span class="number">581</span>, <span class="number">668</span>, <span class="number">127</span>, <span class="number">628</span>, <span class="number">962</span>, <span class="number">698</span>, <span class="number">191</span>, <span class="number">313</span>, <span class="number">714</span>, <span class="number">893</span>];</span><br><span class="line"><span class="keyword">var</span> target = <span class="number">101</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> start = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line"><span class="keyword">var</span> result = <span class="title function_">twoSum</span>(numbers, target);</span><br><span class="line"><span class="keyword">var</span> cost = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>() - start;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(cost);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>好用的Xposed模块推荐</title>
      <link href="/2025/03/22/mobile/2016-07-15-android-xposed-module-introduce/"/>
      <url>/2025/03/22/mobile/2016-07-15-android-xposed-module-introduce/</url>
      
        <content type="html"><![CDATA[<p>这里介绍几款我日常中使用频率最高的几个模块, 我是个宁缺毋滥的人, 相信我的选择多少也能帮到写你.</p><h2 id="应用罗列"><a href="#应用罗列" class="headerlink" title="应用罗列"></a>应用罗列</h2><h3 id="居家必备的"><a href="#居家必备的" class="headerlink" title="居家必备的"></a>居家必备的</h3><ul><li><code>绿色守护</code> – 绿色化应用, 阻止一些应用后台偷偷吃内存, 这个东西我觉得是非常有用, 特别是开了捐赠版之后更是无敌</li><li>X 状态栏农历日期(<code>X statusbar Lunar Date</code>) – 中国人基本上都需要, 它可以让你在下拉系统顶栏时看到日期中的农历</li><li>GravityBox – 这是个很多小工具的集合体, 类似Tweak, 很多实用的功能: 一键清历史任务(我有强迫真), 任务列表顶栏显示可用内存等</li></ul><h3 id="杀手级的"><a href="#杀手级的" class="headerlink" title="杀手级的"></a>杀手级的</h3><ul><li>阻止运行(<code>Prevent Running</code>) – 进制程序后台运行, 只要程序不再最近任务列表里就无法后台运行, 非常好奇它怎么实现的</li><li><code>BootManager</code> – 什么, 你的应用随开机启动, 我好久没有听说过了</li><li><code>RootCloak</code> – 有些时候你虽然root了, 但就是不想让app知道,譬如:打卡机, 网银什么的</li><li>模拟位置(<code>fakegps</code>) – 模拟GPS的位置,这个应用我真的尝试过, 确实是有效的, 谷歌地图和微信都是支持的(就是百度有些问题)</li></ul><h3 id="非常实用的"><a href="#非常实用的" class="headerlink" title="非常实用的"></a>非常实用的</h3><ul><li><code>Screenshot Delay Remover</code> – 截屏的时候让我等几秒是几个意思, 效率去哪里了</li><li><code>WiFi Password</code> – 我家的<code>wifi</code>是<code>MAC</code>地址白名单的, 所以密码什么的不要搞得那么神秘, 我就想看连接密码的明文</li><li><code>Burnt Toast</code> – 你有没有莫名其妙在手机底部看到一个小的弹框提示, 然后过几秒消失了,你虽然知道有问题却不知道是哪个应用的</li></ul><h2 id="遗留的问题"><a href="#遗留的问题" class="headerlink" title="遗留的问题"></a>遗留的问题</h2><p>现在经过调校, 手机基本上按照我的思路在工作, 所有的app基本我不关心就没法向我推送通知(真的很爽, 每次看到还有1G内存就无比开心).<br>但是, 新浪和网银的Light等应用有个周期启动的功能不知道是怎么实现的, 貌似每天晚上11点左右(时间点很固定)会成功向我推送消息,<br>令人发指, 继续折腾中~ing.</p>]]></content>
      
      
      <categories>
          
          <category> 移动 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> 生活 </tag>
            
            <tag> 效率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Xposed框架安装</title>
      <link href="/2025/03/22/mobile/2016-07-15-how-to-root-your-android-mobile/"/>
      <url>/2025/03/22/mobile/2016-07-15-how-to-root-your-android-mobile/</url>
      
        <content type="html"><![CDATA[<p>今天早晨醒来, 手机显示有了新的操作系统更新, 所以晚上照旧 下载<code>Factory</code>固件 -&gt;<br>线刷 -&gt; 检查<code>recovery</code>包 -&gt; 恢复<code>root</code> -&gt; 恢复<code>xposed</code>框架</p><p>以上的过程对于我现在来说比较熟悉的情况下大概需要花费我1-2小时的时间</p><h2 id="为什么选择全部手工"><a href="#为什么选择全部手工" class="headerlink" title="为什么选择全部手工?"></a>为什么选择全部手工?</h2><p>其实我也是一个懒人, 所以我肯定写过一些脚本来自动做, 目前这个脚本已经可以自动去官网上自动下载最新的fatory固件、<br>去除<code>flash-all.sh</code>中的<code>-w</code>选项、并且通知我的手机进入<code>bootloader</code>刷机模式,但是现在有些比较蛋疼的是, 刷完后系统会自动<br>重启，然后应用的优化会非常耗时(不算xposed都有77个), 所以后面的<code>recovery</code>和<code>xposed</code>就比较难弄了, 所以只能先”手动”了</p><h2 id="Plan"><a href="#Plan" class="headerlink" title="Plan"></a>Plan</h2><p>作为21世纪有思想的新青年, 自动化是必然的事情, 所以在我没有想到解决上面的问题前, 先把刷机固定的步骤记录下来,<br>方便后面自动脚本的编写.</p><ul><li><input checked="" disabled="" type="checkbox"> 固化刷机步骤</li><li><input disabled="" type="checkbox"> 脚本自动刷机</li></ul><h2 id="固定刷机步骤"><a href="#固定刷机步骤" class="headerlink" title="固定刷机步骤"></a>固定刷机步骤</h2><h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><ul><li>你需要一台原生android系统的手机(Nexus)</li><li>解锁OEM锁(开发者模式里面有)</li><li>解锁bootloader(开机会比较可怕,无所谓)<code>fastboot flashing unlock</code></li></ul><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>这里考虑的是万能方法, 所以必然是线刷Factory固件了, 你需要有以下几样东西, 每次都需要检查是否是最新版本:</p><ul><li><a href="https://developers.google.com/android/nexus/images">Nexus Factory Images</a>不仅可以刷机用还能救转(unlock bootloader, oem unlock)</li><li><a href="https://twrp.me/">TWRP</a>第三方的恢复镜像,因为谷歌官方不支持恢复第三方的东西(<code>supersu</code>, <code>xposed</code>)</li><li><a href="http://download.chainfire.eu/supersu">supersu</a>root专用,最后<code>recover</code>刷进去</li><li><a href="http://dl-xda.xposed.info/framework/">Xposed</a>杀手级应用</li></ul><h3 id="放入第三方的定制包"><a href="#放入第三方的定制包" class="headerlink" title="放入第三方的定制包"></a>放入第三方的定制包</h3><p><code>suspersu</code>和<code>xposed</code>两个包基本上都是zip格式的, 因为需要在recovery页面手动刷入, 所以为了避免麻烦, 在刷机前先通过USB拷入手机, 放到一个熟悉的目录,<br>后面需要手动进入该目录,所以不要太复杂,放根目录进行了.</p><h3 id="恢复官方工厂镜像"><a href="#恢复官方工厂镜像" class="headerlink" title="恢复官方工厂镜像"></a>恢复官方工厂镜像</h3><p>手机开debug模式usb连电脑, 然后解压工厂固件的压缩包, 然后进入解压缩后的目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 替换掉flash-all中危险的清空数据选项-w</span></span><br><span class="line">gsed -i <span class="string">&#x27;s/fastboot -w/fastboot/g&#x27;</span> flash-all.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入bootloader状态</span></span><br><span class="line">adb reboot bootloader</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷入固件</span></span><br><span class="line">sh ./flash-all.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面手机会重启, 真的很久, 下次研究研究有没有替换的方法</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="刷入recovery固件"><a href="#刷入recovery固件" class="headerlink" title="刷入recovery固件"></a>刷入<code>recovery</code>固件</h3><p>命令行进入twrp镜像所在目录, 然后命令行运行如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入bootloader状态</span></span><br><span class="line">adb reboot bootloader</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷入固件</span></span><br><span class="line">fastboot flash recovery twrp-3.0.2-0-angler.img</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷入后不会要求重启, 马上进入下面的刷入supersu和exposed</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入恢复模式（建议还是硬件操作比较好）</span></span><br><span class="line">adb reboot recovery</span><br></pre></td></tr></table></figure><h3 id="刷入定制的第三方定制包"><a href="#刷入定制的第三方定制包" class="headerlink" title="刷入定制的第三方定制包"></a>刷入定制的第三方定制包</h3><p>这一步基本都是手动, 手动就手动吧, 手动安装两个zip的包然后重启.</p><p><strong>DONE</strong></p>]]></content>
      
      
      <categories>
          
          <category> 移动 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> 生活 </tag>
            
            <tag> 效率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gulp学习笔记</title>
      <link href="/2025/03/22/life/2016-07-10-gulp-work-study/"/>
      <url>/2025/03/22/life/2016-07-10-gulp-work-study/</url>
      
        <content type="html"><![CDATA[<h2 id="背景说明"><a href="#背景说明" class="headerlink" title="背景说明"></a>背景说明</h2><p>我的博客自14年以来更新非常缓慢,想了一下原因,主要前端这块的接触实在太少,所以每次想美化一下博客,<br>或者给博客增加一些小功能的时候非常痛苦,所以准备用工程化的理念来对博客进行管理.</p><h2 id="Gulp介绍"><a href="#Gulp介绍" class="headerlink" title="Gulp介绍"></a>Gulp介绍</h2><p>gulp我的理解是, 使用npm作为类库管理, 但是使用js这种灵活的脚本来完成任务的编写,而且最吸引我的是,<br>她是基于流的, 所以给我的最大感受就是, 刚开始学习有些困难, 但是弄明白一个之后就一通百通了.</p><h3 id="使用插件介绍"><a href="#使用插件介绍" class="headerlink" title="使用插件介绍"></a>使用插件介绍</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">gulp-load-plugins:</span> <span class="string">以驼峰访问的方式访问以gulp开头的插件</span></span><br><span class="line"><span class="attr">gulp-util:</span> <span class="string">日志啊什么的</span></span><br><span class="line"><span class="attr">gulp-sass:</span> <span class="string">用来编译sass为css</span></span><br><span class="line"><span class="attr">gulp-filter:</span> <span class="string">过滤器</span></span><br><span class="line"><span class="attr">gulp-print:</span> <span class="string">用于输入管道的中间文件</span></span><br><span class="line"><span class="attr">gulp-concat:</span> <span class="string">用于拼接文件</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="gulp脚本重构"><a href="#gulp脚本重构" class="headerlink" title="gulp脚本重构"></a>gulp脚本重构</h3><ul><li><input checked="" disabled="" type="checkbox"> 第一次重构, 将<code>config.json</code>改写成<code>config.js</code>, 是的配置的编写更加自由</li><li><input checked="" disabled="" type="checkbox"> 第二次重构, 将gulp的task根据功能分成不同的文件, 便于管理和区分</li></ul>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何不换PC使用多个github账号</title>
      <link href="/2025/03/22/life/2016-07-13-git-study/"/>
      <url>/2025/03/22/life/2016-07-13-git-study/</url>
      
        <content type="html"><![CDATA[<p>最近博客上的几个类库的cdn服务都在国外,速度很慢,想来想去,最好自己弄个cdn的仓库做服务,所以就需要有两个<br><code>github</code>的账号. 本来用起来没有问题, 但是在<code>git push</code>的时候发现没法<code>push</code>,<br><code>ssh key</code>在github上不能重复. 么有办法了, 不可能</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>相当于ssh的时候, 让ssh根据hosts的url来选择不同的密钥文件(当然你也可以设置不同仓库使用不同邮箱提交),<br>懒人配置如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh/</span><br><span class="line"><span class="built_in">touch</span> config</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认就是不配置, 走默认的密钥文件</span></span><br><span class="line">Host github.com</span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二个选择, 如果你的仓库url是形如git@two.github.com:hello/hello.git就会默认走这个配置</span></span><br><span class="line">Host two.github.com  <span class="comment"># 前缀名可以任意设置</span></span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~/.ssh/id_rsa1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="测试一下"><a href="#测试一下" class="headerlink" title="测试一下"></a>测试一下</h2><p>每个密钥文件都是<code>ssh-keygen -t rsa -b 4096 -C &quot;ziyu0123456789@gmail.com&quot;</code>这样生成的,<br>而生成的公钥又会配置到<code>github</code>上面, 所以我们如果使用了不同的密钥文件, github应该可以通过密钥的不同<br>区分出我们来.以下是我的测试及回显:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line"><span class="comment">#Hi aiziyuer! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br><span class="line"><span class="comment"># 上面可以看出, github已经认出我是aiziyuer, 说明我使用的是默认密钥</span></span><br><span class="line"></span><br><span class="line">ssh -T git@two.github.com</span><br><span class="line"><span class="comment">#Hi aiziyuer-cdn! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br><span class="line"><span class="comment"># 上面识别出我是aiziyuer-cdn, 说明我使用的第二密钥</span></span><br></pre></td></tr></table></figure><h2 id="设置仓库使用第二密钥"><a href="#设置仓库使用第二密钥" class="headerlink" title="设置仓库使用第二密钥"></a>设置仓库使用第二密钥</h2><p>因为我的默认的仓库地址是<code>git@github.com:aiziyuer-cdn/aiziyuer-cdn.github.io.git</code>, 所以修改如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="built_in">rm</span> origin</span><br><span class="line">git remote add origin git@two.github.com::aiziyuer-cdn/aiziyuer-cdn.github.io.git</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人简历</title>
      <link href="/2025/03/22/life/2015-09-20-about-me/"/>
      <url>/2025/03/22/life/2015-09-20-about-me/</url>
      
        <content type="html"><![CDATA[<blockquote><p>$${ (1+0.1)^{ 365 }&#x3D;37.78343433288728 }$$<br>$${ (1-0.1)^{ 365 }&#x3D;0.025517964452291 }$$</p></blockquote><p>通往荣誉的道路上并不是铺满鲜花的。 </p><h1 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h1><ul><li>手机：<code>18629673183</code>&#x2F;<code>15109237103</code>(家人)</li><li>Email：<code>spritemoss@gmail.com</code></li><li>QQ&#x2F;微信号：<code>910217951</code>&#x2F;<code>moss815210</code></li></ul><hr><h1 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h1><ul><li><p>李聪 &#x2F; 男 &#x2F; 1990</p></li><li><p>本科&#x2F;西安电子科技大学</p></li><li><p>工作年限：3年~</p></li><li><p>技术博客：<a href="http://blog.aiziyuer.com/">http://blog.aiziyuer.com</a></p></li><li><p>Github: <a href="https://github.com/aiziyuer">https://github.com/aiziyuer</a></p></li><li><p>期望职位：C++&#x2F;java高级程序员</p></li><li><p>期望薪资：税前月薪13k~20k，特别喜欢的公司可例外</p></li><li><p>期望城市：西安&#x2F;杭州</p></li></ul><hr><h1 id="工作经历"><a href="#工作经历" class="headerlink" title="工作经历"></a>工作经历</h1><h2 id="西安华为技术公司-（-2013年7月-当前-）"><a href="#西安华为技术公司-（-2013年7月-当前-）" class="headerlink" title="西安华为技术公司 （ 2013年7月 ~ 当前 ）"></a>西安华为技术公司 （ 2013年7月 ~ 当前 ）</h2><h3 id="Struts从1-0到2-0框架切换"><a href="#Struts从1-0到2-0框架切换" class="headerlink" title="Struts从1.0到2.0框架切换"></a>Struts从1.0到2.0框架切换</h3><p>我在此项目中主导完成产品Web前台框架的切换。因为是第一次接触Web，克服了对Spring和Struts的不熟悉，积极研读Apache官方文档和指导，最终在3天内完成了框架的切换，大大超出最初2周工作量估计，并且可以做到Struts1和Struts2并存，让产品可以慢慢过渡，得到部门领导的一致好评，并获得部门“金网络”的殊荣。</p><h3 id="CodeCT项目"><a href="#CodeCT项目" class="headerlink" title="CodeCT项目"></a>CodeCT项目</h3><p>我在此项目中主要完成结果的图表展示功能开发。使用java自带的SAX来将java的对象转换成XML，在半天的时间内高效完成图表的展示功能开发，并且将代码形成模式，利于后续为维护和扩展。超出原始的一周工作量估计，并且实现的机制受到之后维护的兄弟一致好评。CodeCT工具最终也获得了“固网好工具”的称号。</p><h3 id="VDF一期OTDR算法增强项目"><a href="#VDF一期OTDR算法增强项目" class="headerlink" title="VDF一期OTDR算法增强项目"></a>VDF一期OTDR算法增强项目</h3><p>我在此项目中主要担任双端测试的结果合并算法逻辑实现，与另外两名同事配合。过程中我积极与算法SE沟通算法规格的细节，将算法实现的风险提前暴露，最终完成VDF一期的交付，得到一线客户的认同。</p><h3 id="MatchOnu项目"><a href="#MatchOnu项目" class="headerlink" title="MatchOnu项目"></a>MatchOnu项目</h3><p>我在此项目中独立完成了MatchONU的算法编写。项目中我尝试了学习JDK的模板方法抽象了算法中使用到的排列组合逻辑，使得这部分复杂逻辑可以独立与业务逻辑得到测试用例的验证，最终在两周的时间内完成了算法的实现。</p><h3 id="Vectoring运维保障工具项目"><a href="#Vectoring运维保障工具项目" class="headerlink" title="Vectoring运维保障工具项目"></a>Vectoring运维保障工具项目</h3><p>我在此项目中使用SWT独立完成用户界面的开发，项目中我克服了对SWT框架不熟、java多线程、SQLite读写性能瓶颈等诸多困难，最终在与项目组SE和其余同事讨论以及在自己的研究下，在3周内完成界面开发，并获得了产品一线运维人员的好评。过程中在数据库的处理上使用了java中的反射高效完成了数据库表到对象的转换，兼顾读写速度的同时还减少了开发的工作量，获得同事的认可。</p><hr><h1 id="开源项目和作品"><a href="#开源项目和作品" class="headerlink" title="开源项目和作品"></a>开源项目和作品</h1><p>初出茅庐，学艺尚浅，所以工作之余将工作中或者学习中的一些心得和笔记用一些小的项目记录下来。</p><h2 id="开源项目"><a href="#开源项目" class="headerlink" title="开源项目"></a>开源项目</h2><ul><li><a href="https://github.com/aiziyuer/CurveLibrary">CurveLibrary</a>:用于学习Maven做项目管理的web项目</li><li><a href="https://github.com/aiziyuer/Signorina">Signorina</a>:学习SWT和Spring的AOP而做的客户端项目</li></ul><h2 id="技术文章"><a href="#技术文章" class="headerlink" title="技术文章"></a>技术文章</h2><ul><li><a href="http://blog.aiziyuer.com/2015/05/28/%E7%BF%BB%E9%A1%B5%E6%95%88%E6%9E%9C%E6%A8%A1%E6%8B%9F.html">翻页效果模拟</a></li><li><a href="http://blog.aiziyuer.com/2015/06/18/Tomcat%E6%94%AF%E6%8C%81%E5%8F%8C%E5%90%91%E8%AE%A4%E8%AF%81.html">Tomcat支持双向认证</a></li></ul><h1 id="技能清单"><a href="#技能清单" class="headerlink" title="技能清单"></a>技能清单</h1><p>以下均为我熟练使用的技能</p><ul><li>Web开发：JavaScript</li><li>Web框架：Struts&#x2F;Spring</li><li>前端工具：Grunt&#x2F;SaSS&#x2F;</li><li>数据库相关：MySQL&#x2F;SQLite&#x2F;Oracle</li><li>版本管理、文档和自动化部署工具：Svn&#x2F;Git&#x2F;Maven</li><li>语言工具类：正则表达式</li></ul><p>一下是我熟悉的技能</p><ul><li>语言类：C++&#x2F;Ruby&#x2F;Qt&#x2F;Shell</li></ul><hr><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>感谢您花时间阅读我的简历，期待能有机会和您共事。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> about </tag>
            
            <tag> me </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>翻页效果模拟</title>
      <link href="/2025/03/22/graph/2015-05-28-%E7%BF%BB%E9%A1%B5%E6%95%88%E6%9E%9C%E6%A8%A1%E6%8B%9F/"/>
      <url>/2025/03/22/graph/2015-05-28-%E7%BF%BB%E9%A1%B5%E6%95%88%E6%9E%9C%E6%A8%A1%E6%8B%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p>这是一个简单的翻页模拟，还是大学里面研究的，这里相当于是复习一下，所以准备重新梳理一下文章。</p><p><img src="/image/%E7%BF%BB%E9%A1%B5%E6%95%88%E6%9E%9C%E6%A8%A1%E6%8B%9F/%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA.png" alt="image"></p><h2 id="绘制准备"><a href="#绘制准备" class="headerlink" title="绘制准备"></a>绘制准备</h2><ol><li>这里为了简单体检，我使用的是<code>GeoGebra</code>进行模拟，在画布上绘制一个矩形ABCD, 然后新建一个点<code>P</code>, 相当于我们的手指触摸；</li><li>然后做点P和点B的中垂线与矩形的边AB和边BC分别相交与E2,E1点：</li></ol><p><img src="/image/%E7%BF%BB%E9%A1%B5%E6%95%88%E6%9E%9C%E6%A8%A1%E6%8B%9F/%E7%BB%98%E5%88%B6%E5%87%86%E5%A4%87.png" alt="image"></p><h2 id="计算弯曲点"><a href="#计算弯曲点" class="headerlink" title="计算弯曲点"></a>计算弯曲点</h2><p>假设我们对纸张没有任何的弯曲， 那么线段E1E2就是折痕，但是大自然是很神奇的，纸张反抗，会有一些弯曲，先不关注怎么弯曲的，<br>纸张一定有一段是直的，没有弯曲，我们以线段PF2为例子，假设弯曲部分比例是 $f\in (0,1]$. 所以我们可以在线段PE2上面作点F2使<code>|PF2|=f|PE2|</code>.<br>所以这里的点命令为：<code>F2=(1-f)P+E2</code>，同理，做出线段PF1上的点F1. 这里我们可以认为点F1和点F2是纸张的完全开始点，那么物理上，<br>肯定在线段AB和BC上面存在与之对应的点，并且弯曲部分的曲线也一定是对称的，一样，以F2为例子，那么点F2’的坐标可以表示为<code>((x(E2)-|F2E2|，0)</code>，<br>曲线如下：</p><p><img src="/image/%E7%BF%BB%E9%A1%B5%E6%95%88%E6%9E%9C%E6%A8%A1%E6%8B%9F/%E8%AE%A1%E7%AE%97%E5%BC%AF%E6%9B%B2%E7%82%B9.png" alt="image"></p><h2 id="绘制弯曲部分曲线"><a href="#绘制弯曲部分曲线" class="headerlink" title="绘制弯曲部分曲线"></a>绘制弯曲部分曲线</h2><p>这里的曲线是贝塞尔曲线，并且它的三个控制点我们都已经找出来了，分辨是折点、弯曲点和对称的弯曲点，这里我们去除掉线段PE2和线段PE1，然后根据三个控制点绘制贝塞尔曲线。这里有一点需要注意，Geogebra并没有自带贝塞尔曲线的函数，所以我们需要借助<code>轨迹</code>功能，来绘制函数的轨迹，这就要求我们清楚贝塞尔的定义：</p><h3 id="线性贝塞尔曲线"><a href="#线性贝塞尔曲线" class="headerlink" title="线性贝塞尔曲线"></a>线性贝塞尔曲线</h3><blockquote><p>给定点P0、P1，线性贝塞尔曲线只是一条两点之间的直线。这条线由下式给出：<br>$$B(t) &#x3D; { P }<em>{ 0 }+t({ P }</em>{ 1 }-{ P }<em>{ 0 })&#x3D;(1-t){ P }</em>{ 0 }+t{ P }_{ 1 }\quad ,t\in [0,1]$$<br>且其等同于线性插值。</p></blockquote><p>线性贝塞尔曲线函数中的t会经过由P0至P1的B（t）所描述的曲线。例如当t&#x3D;0.25时，B（t）即一条由点P0至P1路径的四分之一处。就像由0至1的连续t，B（t）描述一条由P0至P1的直线。<img src="/image/%E7%BF%BB%E9%A1%B5%E6%95%88%E6%9E%9C%E6%A8%A1%E6%8B%9F/B%C3%A9zier_1_big.gif" alt="image"></p><h3 id="二次方贝塞尔曲线"><a href="#二次方贝塞尔曲线" class="headerlink" title="二次方贝塞尔曲线"></a>二次方贝塞尔曲线</h3><p>二次相当于是对一次的扩充</p><blockquote><p>二次方贝塞尔曲线的路径由给定点P0、P1、P2的函数B（t）追踪：<br>$$B(t)&#x3D;{ (1-t) }^{ 2 }{ P }<em>{ 0 }+2t(1-t){ P }</em>{ 1 }+{ t }^{ 2 }{ P }_{ 2 }\quad ,t\in [0,1]$$<br>TrueType字型就运用了以贝塞尔样条组成的二次贝塞尔曲线。</p></blockquote><p>为建构二次贝塞尔曲线，可以中介点Q0和Q1作为由0至1的t：</p><blockquote><p>由P0至P1的连续点Q0，描述一条线性贝塞尔曲线。<br>由P1至P2的连续点Q1，描述一条线性贝塞尔曲线。<br>由Q0至Q1的连续点B（t），描述一条二次贝塞尔曲线。</p></blockquote><p><img src="/image/%E7%BF%BB%E9%A1%B5%E6%95%88%E6%9E%9C%E6%A8%A1%E6%8B%9F/B%C3%A9zier_2_big.svg.png" alt="image"> <img src="/image/%E7%BF%BB%E9%A1%B5%E6%95%88%E6%9E%9C%E6%A8%A1%E6%8B%9F/B%C3%A9zier_2_big.gif" alt="image"></p><p>所以我们的F2-E2-F2’上的贝塞尔轨迹可以表示为$B(t)&#x3D;(1-t)((1-t)F2+tE2)+t((1-t)E2+tF2’)\quad ,t\in[0,1]$,作图如下：</p><p><img src="/image/%E7%BF%BB%E9%A1%B5%E6%95%88%E6%9E%9C%E6%A8%A1%E6%8B%9F/%E7%BB%98%E5%88%B6%E5%BC%AF%E6%9B%B2%E9%83%A8%E5%88%86%E6%9B%B2%E7%BA%BF.png" alt="image"></p><h2 id="绘制弯曲部分的切线"><a href="#绘制弯曲部分的切线" class="headerlink" title="绘制弯曲部分的切线"></a>绘制弯曲部分的切线</h2><p>到这里，应该是已经完成了纸张弯曲的模拟部分了，但是为了更加接近于纸张的效果，我们需要作弯曲部分的切线，这个我也是想了很长时间，可以这样简单理解，我弯曲纸张，那么弯曲上下两部分收到的作用应该是一样的，所以弯曲的曲线一定是对称的，那么我们的切点其实就是曲线的中点。而一次贝塞尔曲线的中点很简单，就是两个点相加除以2的问题，那么二次呢？我们知道二次是对一次的扩充，所以我们相当于先对两个一次贝塞尔曲线求中点，然后再对中点连成的曲线求中点, $B(t)&#x3D;(1-t)((1-t)F2+tE2)+t((1-t)E2+tF2’) ,t&#x3D;\frac { 1 }{ 2 } $, 最后的效果如下:</p><p><img src="/image/%E7%BF%BB%E9%A1%B5%E6%95%88%E6%9E%9C%E6%A8%A1%E6%8B%9F/%E7%BB%98%E5%88%B6%E5%BC%AF%E6%9B%B2%E9%83%A8%E5%88%86%E7%9A%84%E5%88%87%E7%BA%BF.png" alt="image"></p><h2 id="工程化"><a href="#工程化" class="headerlink" title="工程化"></a>工程化</h2><p>之前尝试过载Android和Qt两个平台上进行编码，Android基本实现了Demo，但是性能非常成问题，所以这里留个任务，之后改进一下计算方法，对理论的计算工程化，争取做一个有意思的Demo出来。</p>]]></content>
      
      
      <categories>
          
          <category> 图形 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学，图形，Geogebra </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2015阅读书单</title>
      <link href="/2025/03/22/books/2015-03-30-book-list-of-2015/"/>
      <url>/2025/03/22/books/2015-03-30-book-list-of-2015/</url>
      
        <content type="html"><![CDATA[<h2 id="学习正则表达式"><a href="#学习正则表达式" class="headerlink" title="学习正则表达式"></a>学习正则表达式</h2><ul><li>status: 第一遍读完</li><li>author: 【美】Michael Fitzgerald (王热宇 译)</li><li>publisher: 人民邮电出版社</li><li>language: 中文</li><li>link: <a href="http://www.duokan.com/book/62686">http://www.duokan.com/book/62686</a></li><li>cover: <a href="http://cover.read.duokan.com/mfsv2/download/s010/p01FsMcEwqgb/zlmp4cWu38g6tx.jpg!e">http://cover.read.duokan.com/mfsv2/download/s010/p01FsMcEwqgb/zlmp4cWu38g6tx.jpg!e</a></li><li>description: 整本书对正则的介绍还算详实,但是不能当做工具书,因为书中涉及了多门语言, perl, javascript, java, python等, 如果是想要当工具书, 推荐&lt;&lt;30分钟正则表达式入门&gt;&gt;</li></ul><h2 id="30分钟入门正则表达式"><a href="#30分钟入门正则表达式" class="headerlink" title="30分钟入门正则表达式"></a>30分钟入门正则表达式</h2><ul><li>status: 完成</li><li>author: 互联网</li><li>publisher: 互联网</li><li>language: 中文</li><li>link: <a href="http://hijiangtao.github.io/2014/06/29/StudyNodeofRE/">http://hijiangtao.github.io/2014/06/29/StudyNodeofRE/</a></li><li>description: 非常棒的总结的书籍, 第一遍读一点都没有负担,在工作中边学边读,很多知识温故而知新,我已经通读了3遍了,但是每次用到的时候还会觉得有收获</li></ul>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>怎样为你的博客增加评论功能</title>
      <link href="/2025/03/22/blog/2016-07-17-how-to-add-disqus/"/>
      <url>/2025/03/22/blog/2016-07-17-how-to-add-disqus/</url>
      
        <content type="html"><![CDATA[<p>看了那么多网上使用多说失败的帖子, 所以决定直接使用<a href="https://disqus.com/"><code>disqus</code></a>作为我的博客系统</p><h2 id="博客微调"><a href="#博客微调" class="headerlink" title="博客微调"></a>博客微调</h2><p>这个评论系统做的真的非常棒, 暂时还不了解它的工作原理, 不明白它怎么区分不同的文章的, 不管怎样,先布上去再说.</p><h3 id="页面修改"><a href="#页面修改" class="headerlink" title="页面修改"></a>页面修改</h3><p>我的博客比较简单, 因为我只想给每个<code>post</code>页面, 所以在post页面中多一个<code>include</code>文件<code>disqus</code>, 内容如下:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- An element a visitor can click if they &lt;3 comments! --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;disqus_thread&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&#123;&#123; site.disqus.shortname &#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">noscript</span>&gt;</span>Please enable JavaScript to view the <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://disqus.com/?ref_noscript&quot;</span>&gt;</span>comments powered by Disqus.<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://disqus.com&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dsq-brlink&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>Loading Disqus comments...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样每个页面在加完后都会多个div来表示需要拉取谁的评论信息, 我这里使用的jekyll博客, 所以这里的配置其实是来自<code>_config.yml</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ...</span></span><br><span class="line"></span><br><span class="line"><span class="attr">disqus:</span></span><br><span class="line">  <span class="attr">shortname:</span> <span class="string">aiziyuer</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ...</span></span><br></pre></td></tr></table></figure><h3 id="脚本修改"><a href="#脚本修改" class="headerlink" title="脚本修改"></a>脚本修改</h3><p>我这里使用的ajax的方式执行js, 详细如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ds_loaded = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> top = $(<span class="string">&#x27;#disqus_thread&#x27;</span>).<span class="title function_">offset</span>().<span class="property">top</span>;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">disqus_shortname</span> = $(<span class="string">&#x27;#disqus_thread&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;name&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">check</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">if</span> ( !ds_loaded &amp;&amp; container.<span class="title function_">scrollTop</span>() + container.<span class="title function_">height</span>() &gt; top ) &#123;</span><br><span class="line">  $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;//&#x27;</span> + disqus_shortname + <span class="string">&#x27;.disqus.com/embed.js&#x27;</span>,</span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&#x27;script&#x27;</span>,</span><br><span class="line">    <span class="attr">cache</span>: <span class="literal">true</span></span><br><span class="line">  &#125;);</span><br><span class="line">  ds_loaded = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="title function_">check</span>();</span><br><span class="line">container.<span class="title function_">scroll</span>(check);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何高效地管理博客</title>
      <link href="/2025/03/22/blog/2016-07-11-how-to-manager-blog-start/"/>
      <url>/2025/03/22/blog/2016-07-11-how-to-manager-blog-start/</url>
      
        <content type="html"><![CDATA[<p>我的博客主要是采用<code>jekyll</code>作为后台进行<code>markdown</code>文法的文章渲染,但是我在使用过程中发现主要有两种使用场景:</p><ul><li>对博客主题进行修改 – 往往需要调节<code>css</code>和<code>js</code>等跟博客文章无关的东西, 需要一个可以即时预览的功能</li><li>纯粹写文章, 不想被其他因素打扰, 不涉及美化工作, 文法基本已经记住,不需要实时预览,但是需要刷新页面就能看效果</li></ul><h2 id="实时预览功能"><a href="#实时预览功能" class="headerlink" title="实时预览功能"></a>实时预览功能</h2><p>这个实时预览功能, 最直接的就是修改文章样式后, 浏览器(可能还有我的手机平板)上的网页内容需要跟着刷新.而且同时<br>我的博客中样式的编写都是<code>scss</code>的,所以需要有个实时的编译器,观察到我的样式改变后,立刻生成对应的<code>css</code>文件,并且通知<br><code>jekyll</code>服务刷新头文件,最后通知浏览器刷新页面.</p><h3 id="前端自动化"><a href="#前端自动化" class="headerlink" title="前端自动化"></a>前端自动化</h3><p>考虑到博客也算是一个弱化的前端工程,尝试过<a href="http://compass-style.org/"><code>compass</code></a>、<br><a href="http://koala-app.com/"><code>kola</code></a>,觉得限制实在太多,<br>所以干脆从头开始使用纯前端自动化工具<a href="http://www.gulpjs.com.cn/"><code>gulp</code></a>管理博客.</p><h3 id="一些经验"><a href="#一些经验" class="headerlink" title="一些经验"></a>一些经验</h3><p><code>gulp</code>这个东西给我的感觉有点像<code>unix</code>的味道, 不过不管她多么好用,依然离不开<a href="https://nodejs.org/zh-cn/"><code>nodejs</code></a>,<br><a href="https://www.npmjs.com/"><code>npm</code></a>,我这里就不赘述. 以下是我的一些<code>gulp</code>任务书写经验</p><ul><li><code>gulpfile.js</code>其实可以是一个文件夹, <code>gulp</code>的运行非常聪明, 她可以以文件夹下的index.js作为入口文件</li><li>整个工程中,只有<code>gulp</code>的脚本是属于<code>nodejs</code>, 所以<code>.jshintrc</code>文件建议在<code>gulpfile.js</code>单独弄一个</li><li>使用<a href="https://github.com/aseemk/requireDir"><code>require-dir</code></a>插件可以遍历一个文件夹下所有的<code>javascript</code>文件,懒人必备</li><li><code>config.json</code>作为配置文件的方式太low了, 一律使用<code>config.js</code>+ <code>module.exports</code>的方式替代,美真的不是一点点</li></ul><h3 id="Sass的编译"><a href="#Sass的编译" class="headerlink" title="Sass的编译"></a>Sass的编译</h3><blockquote><p>talk’s cheap, show u the code.</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// gulpfile.js/tasks/css.js 定义编译的任务</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;css&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    gulp.<span class="title function_">src</span>(config.<span class="property">src</span>.<span class="property">scss</span> + <span class="string">&#x27;/**/*.?(s)css&#x27;</span>)</span><br><span class="line">        .<span class="title function_">pipe</span>($.<span class="title function_">sass</span>())</span><br><span class="line">        .<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 这里捕获异常, 只是打印错误日志, 不会终止css任务</span></span><br><span class="line">            $.util.<span class="title function_">log</span>(err);</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">pipe</span>($.<span class="title function_">concat</span>(<span class="string">&#x27;style.css&#x27;</span>))</span><br><span class="line">        .<span class="title function_">pipe</span>(gulp.<span class="title function_">dest</span>(config.<span class="property">src</span>.<span class="property">css</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// gulpfile.js/tasks/watch.js 定义watch任务, 当有css文件更新就触发编译任务</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;watch:css&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    gulp.<span class="title function_">watch</span>(config.<span class="property">src</span>.<span class="property">scss</span> + <span class="string">&#x27;**/*.?(s)css&#x27;</span>, [<span class="string">&#x27;css&#x27;</span>]);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Jekyll编译服务"><a href="#Jekyll编译服务" class="headerlink" title="Jekyll编译服务"></a>Jekyll编译服务</h3><p>因为<code>jekyll</code>是使用<code>ruby</code>语言开发的一个小的服务器,所以需要使用<code>nodejs</code>提供的<code>chind.spawn</code>的方式来多进程运行:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// gulpfile.js/tasks/jekyll.js 使用child.spawn来完成jekyll进程的启动</span></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;jekyll&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> jekyll_exe = process.<span class="property">platform</span> === <span class="string">&quot;win32&quot;</span> ? <span class="string">&quot;jekyll.bat&quot;</span> : <span class="string">&quot;jekyll&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> jekyll = child.<span class="title function_">spawn</span>(jekyll_exe, [<span class="string">&#x27;build&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;--incremental&#x27;</span>, <span class="comment">// 当文章非常多的时候开启, 文章少的时候貌似不开效果更好</span></span><br><span class="line">        <span class="string">&#x27;--watch&#x27;</span></span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> <span class="title function_">jekyllLogger</span> = (<span class="params">buffer</span>) =&gt; &#123;</span><br><span class="line">        buffer.<span class="title function_">toString</span>()</span><br><span class="line">            .<span class="title function_">split</span>(<span class="regexp">/\n/</span>)</span><br><span class="line">            .<span class="title function_">forEach</span>(<span class="function">(<span class="params">message</span>) =&gt;</span> $.util.<span class="title function_">log</span>(<span class="string">&#x27;Jekyll: &#x27;</span> + message));</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    jekyll.<span class="property">stdout</span>.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, jekyllLogger);</span><br><span class="line">    jekyll.<span class="property">stderr</span>.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, jekyllLogger);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="同步刷新浏览器"><a href="#同步刷新浏览器" class="headerlink" title="同步刷新浏览器"></a>同步刷新浏览器</h3><p>这里要介绍下一个很好玩的插件<a href="https://www.browsersync.io/"><code>browserSync</code></a>, 我的理解是她代理了一部分的http服务,<br>所以访问网站的同时,其实是她在页面的投入加入了一些东西, 所以她可以远程触发浏览器重新请求网页, 配置如下:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> browserSync = <span class="built_in">require</span>(<span class="string">&#x27;browser-sync&#x27;</span>).<span class="title function_">create</span>();</span><br><span class="line"></span><br><span class="line">gulp.<span class="title function_">task</span>(<span class="string">&#x27;server&#x27;</span>, [<span class="string">&#x27;css&#x27;</span>], <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">$.util.<span class="title function_">log</span>(config.<span class="property">site</span>);</span><br><span class="line"></span><br><span class="line">    browserSync.<span class="title function_">init</span>(&#123;</span><br><span class="line">        <span class="attr">files</span>: [config.<span class="property">site</span>.<span class="property">root</span> + <span class="string">&#x27;/**&#x27;</span>],</span><br><span class="line">        <span class="attr">port</span>: <span class="number">3131</span>,</span><br><span class="line">        <span class="attr">server</span>: &#123;</span><br><span class="line">            <span class="attr">baseDir</span>: config.<span class="property">site</span>.<span class="property">root</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">   </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="汇总gulp任务"><a href="#汇总gulp任务" class="headerlink" title="汇总gulp任务"></a>汇总gulp任务</h3><p>到这里, 基本上稍微串一串几个任务就可以实现第一个需求了: <code>gulp.task(&#39;start&#39;, [&#39;jekyll&#39;,&#39;server&#39;, &#39;watch&#39;]);</code></p><h3 id="纯粹写代码"><a href="#纯粹写代码" class="headerlink" title="纯粹写代码"></a>纯粹写代码</h3><p>由于我之前博客是使用<code>gulp</code>来进行管理, 这种方式肯定是希望控制台回显更多的错误日志才好,但是如果是平时的使用,我更希望专注于内容的协作, 所以我使用<code>bash</code>改写了启动脚本:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">usage</span></span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">Usage</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  start [options]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Options</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[-k|--kill] 杀死jekyll进程</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[-j|--jekyll] 启动jekyll进程</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[-h|--help] 显示帮助</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[-g|--gulp] gulp的方式运行</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">kill_jekyll_service</span></span>()&#123;</span><br><span class="line">  ps -ef | grep jekyll | grep -v grep | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | xargs <span class="built_in">kill</span> -9</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start_jekyll_service</span></span>()&#123;</span><br><span class="line">  jekyll server &gt;output.log 2&gt;&amp;1 &amp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">gulp_start</span></span>()&#123;</span><br><span class="line">  gulp start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">    (-k|--<span class="built_in">kill</span>)</span><br><span class="line">    kill_jekyll_service</span><br><span class="line">      <span class="built_in">exit</span> 0</span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    (-j|--jekyll)</span><br><span class="line">      kill_jekyll_service</span><br><span class="line">      start_jekyll_service</span><br><span class="line">      <span class="built_in">exit</span> 0</span><br><span class="line">      ;;</span><br><span class="line"></span><br><span class="line">    (-h|--<span class="built_in">help</span>)</span><br><span class="line">      usage</span><br><span class="line">      <span class="built_in">exit</span> 0</span><br><span class="line">      ;;</span><br><span class="line"></span><br><span class="line">    (-g|--gulp)</span><br><span class="line">      gulp_start</span><br><span class="line">      <span class="built_in">exit</span> 0</span><br><span class="line">      ;;</span><br><span class="line"></span><br><span class="line">    (*)</span><br><span class="line">      usage</span><br><span class="line">      <span class="built_in">exit</span> 1</span><br><span class="line">      ;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎样加速你的博客</title>
      <link href="/2025/03/22/blog/2016-07-14-how-to-accelerate-your-blog/"/>
      <url>/2025/03/22/blog/2016-07-14-how-to-accelerate-your-blog/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>众所周知,墙内的生活是拮据的,国内访问github速度一直都非常缓慢,如果你跟我一样选择github的pages服务的话应该会碰到跟我一样的烦恼;</p><ul><li>国内访问速度巨慢, 但是国外的github服务非常稳定, 而且免费</li><li>国内有替代品<code>coding.net</code>(gitcafe是他的前身), 但是全部放到上面不太放心</li></ul><p>搜索了一下, 发现有人已经想到了解决的办法, 这里只是做一些简单的说明</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>如今的域名解析已经非常多样了, 除了普通意义的顶级域名(.com)的根域名解析, 想godday这样的大厂还会把域名映射功能”外包”出去,即允许<br>第三方的域名服务提供商来提供这部分域名的解析功能, 而国内的<code>dnspod</code>就是这样一个存在, 它虽然不具备顶级域名的发放功能,但是实际上<br>他是具有这样的能力(生得太晚了), 而且它的功能做的已经比godday还要好, 它可以针对线路的类型来分流;</p><p>如果是<code>godday</code>+<code>dnspod</code>这样的组合,我们访问我们域名的整个过程就变成了 浏览器请求 -&gt; 根域名服务解析 -&gt; 一级域名解析<br>-&gt; DNSPod根据请求的发起线路选择服务节点 -&gt; 最终的服务提供 -&gt; 相应请求</p><h2 id="我对CNAME的理解"><a href="#我对CNAME的理解" class="headerlink" title="我对CNAME的理解"></a>我对CNAME的理解</h2><p>我觉得博客中的<code>CNAME</code>文件在<code>github</code>中会起到一个跳转作用, 但是不论是<code>github</code>还是<code>coding.net</code>, 其实C<code>NAME</code>文件只是为了<br>让他们的服务器面授<code>DDOS</code>攻击,对于博客作者和博客观众没有任何作用.</p><p>DNS记录中配置的<code>CNAME</code>是有用处的,它允许你使用域名的方式制定私服节点(运行博客的服务器);</p><h2 id="具体配置"><a href="#具体配置" class="headerlink" title="具体配置"></a>具体配置</h2><ol><li><p>到<a href="https://www.dnspod.cn/"><code>dnspod</code></a>注册个号, 然后进入控制台准备配置;</p></li><li><p>找到<em><strong>域名解析</strong></em>然后<em><strong>添加域名</strong></em>,这里基本都是傻瓜式;</p></li><li><p>添加三条记录, 根据线路类型做分流的两条记录以及一条默认线路:</p><p> 编号    |主机记录    |记录类型    |线路类型    | 记录值<br> 1    |@         |CNAME    |默认     | aiziyuer.github.io<br> 2    |@         |CNAME     |国内     | aiziyuer.coding.me<br> 3    |@        |CNAME     |国外     | aiziyuer.github.io</p></li><li><p>需要设置<code>godday</code>使用<code>dnspod</code>来做<code>nameservice</code>;<br> godday 的DNS Manager -&gt; Nameservers 选择自定义 -&gt; 添加两条<code>f1g1ns1.dnspod.net</code>、<code>f1g1ns2.dnspod.net</code><br> -&gt; 保存然后等待修改生效</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何实现博客的搜索</title>
      <link href="/2025/03/22/blog/2016-07-11-how-blog-support-search/"/>
      <url>/2025/03/22/blog/2016-07-11-how-blog-support-search/</url>
      
        <content type="html"><![CDATA[<p>这个问题其实是在几个月前已经解决了,但是这个问题确确实实困扰了我很长的时间,所以我相信写出来肯定也会方便不少人.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;#search-input&#x27;</span>).<span class="title function_">keyup</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">    $(<span class="variable language_">this</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;active&#x27;</span>).<span class="title function_">siblings</span>().<span class="title function_">removeClass</span>(<span class="string">&#x27;active&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 先将隐藏所有的文章</span></span><br><span class="line">    $(<span class="string">&#x27;.pl__all&#x27;</span>).<span class="title function_">hide</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取输入框的内容(转小写是为了不区分大小写)</span></span><br><span class="line">    <span class="keyword">var</span> search_val = $(<span class="string">&#x27;#search-input&#x27;</span>).<span class="title function_">val</span>().<span class="title function_">toLowerCase</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里是获取当前用户选择了分类</span></span><br><span class="line">    $(<span class="string">&#x27;#pl__container &gt; .&#x27;</span> + $(<span class="string">&#x27;#tags__ul &gt; .active&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&#x27;id&#x27;</span>) + <span class="string">&#x27; &gt; .pl__title &#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">i</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> e = $(<span class="variable language_">this</span>);</span><br><span class="line">        <span class="comment">// 忽略大小写后进行比较</span></span><br><span class="line">        <span class="keyword">if</span> (e.<span class="title function_">text</span>().<span class="title function_">toLowerCase</span>().<span class="title function_">contains</span>(search_val)) &#123;</span><br><span class="line">            <span class="comment">// 设置延迟10ms并且渐变显示出来</span></span><br><span class="line">            e.<span class="title function_">parent</span>().<span class="title function_">delay</span>(<span class="number">10</span>).<span class="title function_">fadeIn</span>(<span class="number">15</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客的RoadMap</title>
      <link href="/2025/03/22/blog/2016-07-10-blog-roadmap/"/>
      <url>/2025/03/22/blog/2016-07-10-blog-roadmap/</url>
      
        <content type="html"><![CDATA[<p>本文主要用来记录过去的三年我在博客中已经完成的功能及在以后的日子里可能会带来的特性;</p><h2 id="博客的功能"><a href="#博客的功能" class="headerlink" title="博客的功能"></a>博客的功能</h2><ul><li><input checked="" disabled="" type="checkbox"> 借助的<code>MathJax</code>支持数学公式,基本<code>Latex</code>语法</li><li><input checked="" disabled="" type="checkbox"> 纯<code>js</code>+’jquery’实现的热搜索,文章较少基本够用,后面考虑配合正则在feed中查找;</li><li><input checked="" disabled="" type="checkbox"> 博客使用前端自动化工具<code>gulp</code>进行依赖管理;</li><li><input checked="" disabled="" type="checkbox"> <code>gulp</code>的常用任务实现: <code>watch</code>, <code>jekyll</code>, <code>sass</code></li><li><input checked="" disabled="" type="checkbox"> 博客字体美化修改, 使得在<code>mac</code>, <code>android</code>, <code>win</code>下的字体都比较好看</li><li><input disabled="" type="checkbox"> 将<code>RoadMap</code>做成<code>Timeline</code></li><li><input checked="" disabled="" type="checkbox"> 订阅功能: <code>feed</code>、<code>atom</code>我还需要考虑一下;</li><li><input disabled="" type="checkbox"> 代码高亮, 需要一个黑色主题的, 尽可能丰富, 尽可能支持多中语言</li><li><input checked="" disabled="" type="checkbox"> 实现博客的评论功能, <a href="https://blog.aiziyuer.com/2016/07/17/how-to-add-disqus.html">怎样为你的博客增加评论功能</a></li><li><input disabled="" type="checkbox"> 访问统计, 国内外分流</li><li><input disabled="" type="checkbox"> 实现博客的暗色主题化, 我大部分的工作都是在夜晚进行的</li><li><input checked="" disabled="" type="checkbox"> 博客支持<code>https</code>访问</li><li><input checked="" disabled="" type="checkbox"> 博客使用<code>cdn</code>进行访问加速</li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何计算方差和平均值</title>
      <link href="/2025/03/22/ai/2015-10-07-how-to-calculate-mean-and-variance/"/>
      <url>/2025/03/22/ai/2015-10-07-how-to-calculate-mean-and-variance/</url>
      
        <content type="html"><![CDATA[<p>在日常工作中，会碰到需要重复统计某些固定范围的数据，而这些数据往往有以下的特点：</p><ul><li>数据可能是每天都需要更新；</li><li>每天的数据量非常大；</li><li>最终需要快速展示多天数据的统计信息：方差，期望；</li><li>统计所用内存不能太大；</li></ul><p>从以上的条件中可以看到，方差和均值的计算必须是增量式的，不能存储中间的结果；庆幸的是，数学总是很奇妙，可以满足我们磕磕绊绊的需求。</p><h2 id="递推公式"><a href="#递推公式" class="headerlink" title="递推公式"></a>递推公式</h2><p>平均值计算:</p><p>$${ E }<em>{ n }&#x3D;{ E }</em>{ n-1 }+\frac { { X }<em>{ n }-{ E }</em>{ n-1 } }{ n } ,\quad 其中{ E }<em>{ n }&#x3D;\frac { \sum <em>{ i&#x3D;1 }^{ n }{ { x }</em>{ n } }  }{ n } ,{ E }</em>{ n }&#x3D;{ x }_{ 0 }. $$</p><p>方差计算:</p><p>$$F_{ n }&#x3D;{ F }<em>{ n-1 }+({ x }</em>{ n }-{ F }<em>{ n-1 })({ x }</em>{ n }-{ F }<em>{ n }),\quad { 其中{ { S }</em>{ n } }^{ 2 } }&#x3D;\frac { { F }<em>{ n } }{ n } &#x3D;\frac { \sum <em>{ i-1 }^{ n }{ { ({ x }</em>{ i }-{ E }</em>{ n }) }^{ 2 } }  }{ n } ,{ { S }_{ 0 } }^{ 2 }&#x3D;0. $$</p><p>所以每次迭代都可以直接通过上一次的结果得到当前的平均值和方差，下面给出一些公式的推导。</p><h2 id="公式推导"><a href="#公式推导" class="headerlink" title="公式推导"></a>公式推导</h2><h3 id="平均值推导"><a href="#平均值推导" class="headerlink" title="平均值推导"></a>平均值推导</h3><p>平均值定义：$${ E }_{ n }&#x3D;\frac { \sum <em>{ i&#x3D;1 }^{ n }{ { x }</em>{ n } }  }{ n } ,$$所以可以得到如下推导:</p><p>$${ E }<em>{ n }&#x3D;\frac { \sum <em>{ i&#x3D;1 }^{ n }{ { x }</em>{ n } }  }{ n } &#x3D;\frac { \sum <em>{ i&#x3D;1 }^{ n-1 }{ { x }</em>{ i } } +{ x }</em>{ n } }{ n } &#x3D;\frac { (n-1)\frac { \sum <em>{ i&#x3D;1 }^{ n-1 }{ { x }</em>{ i } }  }{ n-1 } +{ x }<em>{ n } }{ n } &#x3D;\frac { (n-1){ E }</em>{ n-1 }+{ x }<em>{ n } }{ n } &#x3D;{ E }</em>{ n-1 }+\frac { { x }<em>{ n }-{ E }</em>{ n-1 } }{ n }$$,</p><p> 其中其中$${ E }<em>{ 0 }&#x3D;{ x }</em>{ 0 }$$.</p><h3 id="方差推导"><a href="#方差推导" class="headerlink" title="方差推导"></a>方差推导</h3><p>方差定义： $${ { { S }<em>{ n } }^{ 2 } }&#x3D;\frac { \sum <em>{ i-1 }^{ n }{ { ({ x }</em>{ i }-{ E }</em>{ n }) }^{ 2 } }  }{ n } $$.</p><p>为了推导方便，令$${ F }<em>{ n }&#x3D;\sum <em>{ i&#x3D;1 }^{ n }{ { ({ x }</em>{ i }-{ E }</em>{ n }) }^{ 2 } }. $$, 想要获得方差，其实就是需要计算函数F在n处的值，已下给出相关推导:</p><p>$${ F }<em>{ n }-{ F }</em>{ n-1 }&#x3D;\sum <em>{ i&#x3D;1 }^{ n }{ { ({ x }</em>{ i }-{ E }<em>{ n }) }^{ 2 } } -\sum <em>{ i&#x3D;1 }^{ n-1 }{ { ({ x }</em>{ i }-{ E }</em>{ n-1 }) }^{ 2 }&#x3D; } \sum <em>{ i&#x3D;1 }^{ n }{ { ({ x }</em>{ i }-{ E }<em>{ n-1 }+{ E }</em>{ n-1 }-{ E }<em>{ n }) }^{ 2 } } -\sum <em>{ i&#x3D;1 }^{ n-1 }{ { ({ x }</em>{ i }-{ E }</em>{ n-1 }) }^{ 2 } } $$，</p><p>继续展开第一项中的平方: </p><p>$${ F }<em>{ n }-{ F }</em>{ n-1 }&#x3D;{ ({ x }<em>{ n }-{ E }</em>{ n-1 }) }^{ 2 }+\sum <em>{ i&#x3D;1 }^{ n-1 }{ { ({ x }</em>{ i }-{ E }<em>{ n-1 }) }^{ 2 } } +2({ E }</em>{ n-1 }-{ E }<em>{ n })\sum <em>{ i&#x3D;1 }^{ n }{ ({ x }</em>{ i }-{ E }</em>{ n-1 }) } +\sum <em>{ i&#x3D;1 }^{ n }{ { ({ E }</em>{ n-1 }-{ E }<em>{ n }) }^{ 2 } } -\sum <em>{ i&#x3D;1 }^{ n-1 }{ { ({ x }</em>{ i }-{ E }</em>{ n-1 }) }^{ 2 } } $$,</p><p>第二项和第五项消掉并且直接计算第三四项求和:</p><p>$${ F }<em>{ n }-{ F }</em>{ n-1 }&#x3D;{ ({ x }<em>{ n }-{ E }</em>{ n-1 }) }^{ 2 }+2({ E }<em>{ n-1 }-{ E }</em>{ n })({ nE }<em>{ n }-{ nE }</em>{ n-1 })+{ n({ E }<em>{ n-1 }-{ E }</em>{ n }) }^{ 2 }$$,</p><p>根据平均值的计算可以推导如下:</p><p>$${ E }<em>{ n }&#x3D;{ E }</em>{ n-1 }+\frac { { x }<em>{ n }-{ E }</em>{ n-1 } }{ n } \Rightarrow n{ E }<em>{ n }&#x3D;n{ E }</em>{ n-1 }+{ x }<em>{ n }-{ E }</em>{ n-1 }\Rightarrow n({ E }<em>{ n }-{ E }</em>{ n-1 })&#x3D;{ x }<em>{ n }-{ E }</em>{ n-1 }$$,</p><p>带入上一步第二项化简:</p><p>$${ F }<em>{ n }-{ F }</em>{ n-1 }&#x3D;{ ({ x }<em>{ n }-{ E }</em>{ n-1 }) }^{ 2 }+2({ x }<em>{ n }-{ E }</em>{ n-1 })({ E }<em>{ n-1 }-{ E }</em>{ n })+{ n({ E }<em>{ n-1 }-{ E }</em>{ n }) }^{ 2 }&#x3D;{ ({ x }<em>{ n }-{ E }</em>{ n-1 }) }^{ 2 }-2({ x }<em>{ n }-{ E }</em>{ n-1 })({ E }<em>{ n }-{ E }</em>{ n-1 })+{ n({ E }<em>{ n }-{ E }</em>{ n-1 }) }^{ 2 }$$,</p><p>后面两项提出公因式后:</p><p>$${ F }<em>{ n }-{ F }</em>{ n-1 }&#x3D;{ ({ x }<em>{ n }-{ E }</em>{ n-1 }) }^{ 2 }+({ E }<em>{ n }-{ E }</em>{ n-1 }){ [-2x }<em>{ n }+2{ E }</em>{ n-1 }+n({ E }<em>{ n }-{ E }</em>{ n-1 })]$$,</p><p>带入均值推导公式的第二个推导式并化简:</p><p>$${ F }<em>{ n }-{ F }</em>{ n-1 }&#x3D;{ ({ x }<em>{ n }-{ E }</em>{ n-1 }) }^{ 2 }+({ E }<em>{ n }-{ E }</em>{ n-1 }){ [{ E }<em>{ n-1 }-x }</em>{ n }]$$,</p><p>整理顺序看起来更加清晰:</p><p>$${ F }<em>{ n }-{ F }</em>{ n-1 }&#x3D;{ ({ x }<em>{ n }-{ E }</em>{ n-1 }) }^{ 2 }-({ x }<em>{ n }-{ E }</em>{ n-1 })({ E }<em>{ n }-{ E }</em>{ n-1 })$$,</p><p>提取公因式获得最终的最简式:</p><p>$${ F }<em>{ n }-{ F }</em>{ n-1 }&#x3D;({ x }<em>{ n }-{ E }</em>{ n-1 })({ x }<em>{ n }-{ E }</em>{ n })$$,</p><p>因此可以得到如下公式:</p><p>$${ F }<em>{ n }&#x3D;{ F }</em>{ n-1 }+({ x }<em>{ n }-{ E }</em>{ n-1 })({ x }<em>{ n }-{ E }</em>{ n })$$,</p><p>其中$${ F }_{ 0 }&#x3D;{ 0 }$$.</p><p>证毕.</p><h2 id="编码实现"><a href="#编码实现" class="headerlink" title="编码实现"></a>编码实现</h2><h3 id="java版本"><a href="#java版本" class="headerlink" title="java版本"></a>java版本</h3><p>(未完待续)</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法，统计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/03/22/hello-world/"/>
      <url>/2025/03/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
